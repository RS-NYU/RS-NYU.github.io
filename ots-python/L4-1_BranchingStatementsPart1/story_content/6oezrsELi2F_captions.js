window.globalProvideData('caption', '{"data":"WEBVTT%0D%0AKind:%20captions%0D%0ASource:%20Articulate%20Closed%20Captions%20Editor%0D%0ASource%20Version:%201.10.13923.0%0D%0A%0D%0A00:00:01.379%20--%3E%2000:00:07.390%0D%0AOkay%20so%20let\u0027s%20go%20ahead%20first%20let\u0027s%20start%0D%0Aasking%20the%20user%20to%20enter%20an%20integer,%20so%0D%0A%0D%0A00:00:07.391%20--%3E%2000:00:17.230%0D%0Alet\u0027s%20print%20%22please%20enter%20an%20integer%22%20and%0D%0Athen%20let\u0027s%20read%20this%20integer%20from%20the%0D%0A%0D%0A00:00:17.231%20--%3E%2000:00:26.710%0D%0Auser.%20So%20user%20input%20equals%20whatever%20the%0D%0Auser%20puts%20in%20again%20input%20obviously%0D%0A%0D%0A00:00:26.711%20--%3E%2000:00:31.500%0D%0Areturns%20the%20string%20so%20we%20would%20need%20to%0D%0Acast%20it%20to%20an%20integer%20so%20we%20could%20then%0D%0A%0D%0A00:00:31.501%20--%3E%2000:00:40.960%0D%0Ado%20some%20mathematical%20operations%20on%20it.%0D%0ANow%20we%20need%20basically%20to%20figure%20out%0D%0A%0D%0A00:00:40.961%20--%3E%2000:00:47.350%0D%0Awhat\u0027s%20the%20absolute%20value%20is%20and%20as%20we%0D%0Asaid%20there%20are%20two%20cases%20if%20the%20user%0D%0A%0D%0A00:00:47.351%20--%3E%2000:00:51.969%0D%0Ainput%20is%20positive%20we%20don\u0027t%20need%20to%20do%0D%0Aanything,%20otherwise%20we%20need%20to%20flip%20the%0D%0A%0D%0A00:00:51.970%20--%3E%2000:00:57.429%0D%0Asign%20for%20example%20if%20the%20value%20is%0D%0Anegative%20seven%20we%20want%20to%20change%20it%20to%20a%0D%0A%0D%0A00:00:57.430%20--%3E%2000:01:02.890%0D%0Aseven.%20Mathematically%20in%20order%20to%20flip%20a%0D%0Asign%20basically%20we%20need%20to%20multiply%20it%20by%0D%0A%0D%0A00:01:02.891%20--%3E%2000:01:07.540%0D%0Anegative%20one%20that%20that\u0027s%20the%20way%20to%20turn%0D%0Athe%20negative%20number%20into%20its%20additive%0D%0A%0D%0A00:01:07.541%20--%3E%2000:01:13.300%0D%0Ainverse.%20So%20yeah,%20so%20if%20we%20take%20negative%207%0D%0Amultiplied%20by%20negative%20one%20you\u0027ll%20get%20a%0D%0A%0D%0A00:01:13.301%20--%3E%2000:01:19.750%0D%0Aseven%20which%20is%20the%20absolute%20value.%20So%0D%0Alet\u0027s%20go%20ahead%20and%20see%20if%20we%20want%20to%0D%0A%0D%0A00:01:19.751%20--%3E%2000:01:24.100%0D%0Amultiply%20user%20input%20negative%201%20or%20we%0D%0Adon\u0027t%20need%20to%20do%20that.%20For%20that%20we%20would%0D%0A%0D%0A00:01:24.101%20--%3E%2000:01:32.230%0D%0Ause%20an%20if%20statement%20and%20the%20boolean%0D%0Acondition%20would%20basically%20check%20whether%0D%0A%0D%0A00:01:32.231%20--%3E%2000:01:39.250%0D%0Auser%20input%20is%20negative%20in%20this%20case%20we%0D%0Awant%20to%20do%20the%20sign%20flip.%20Sign%20flip%20is%0D%0A%0D%0A00:01:39.251%20--%3E%2000:01:46.390%0D%0Abasically%20as%20we%20said%20user%20input%20times%0D%0Anegative%201%20that%20would%20flip%20the%20sign%20of%0D%0A%0D%0A00:01:46.391%20--%3E%2000:01:51.970%0D%0Auser%20input%20to%20be%20its%20additive%20inverse%20so%0D%0Aif%20user%20input%20is%20negative%207%20and%20by%0D%0A%0D%0A00:01:51.971%20--%3E%2000:01:58.390%0D%0Amultiplying%20it%20by%20negative%201%20that%20would%0D%0Aresult%20into%207,%20but%20we%20want%20to%20change%20user%0D%0A%0D%0A00:01:58.391%20--%3E%2000:02:04.510%0D%0Ainput%20to%20be%207,%20so%20let\u0027s%20set%20user%20input%0D%0Awith%20this%20new%20value%20of%20user%20input%20times%0D%0A%0D%0A00:02:04.511%20--%3E%2000:02:12.280%0D%0Anegative%201.%20So%20if%20user%20input%20is%20negative,%0D%0Ain%20this%20case%20we\u0027ll%20multiply%20user%20input%0D%0A%0D%0A00:02:12.281%20--%3E%2000:02:20.079%0D%0Aby%20negative%201%20and%20assign%20it%20back%0D%0Ato%20user%20input.%20I%20just%20noticed%20that%20I%0D%0A%0D%0A00:02:20.080%20--%3E%2000:02:25.090%0D%0Adidn\u0027t%20type%20user%20input%20correctly%20so%0D%0Alet\u0027s%20refactor%20here%20and%20change%20the%0D%0A%0D%0A00:02:25.091%20--%3E%2000:02:30.969%0D%0Avariable%20name%20I%20can%20use%20the%20refactor%0D%0Afunction%20here%20and%20instead%20of%20user%20in%0D%0A%0D%0A00:02:30.970%20--%3E%2000:02:38.409%0D%0Apoor%20let\u0027s%20do%20user%20input%20and%20that%20would%0D%0Achange%20it%20for%20the%20entire%20program%20so%20now%0D%0A%0D%0A00:02:38.410%20--%3E%2000:02:46.620%0D%0Ait%20spells%20correctly%20user%20input.%20And%20then%0D%0Adown%20here%20we%20can%20just%20print%20the%20value%20of%0D%0A%0D%0A00:02:46.621%20--%3E%2000:02:54.909%0D%0Auser%20input.%20So%20if%20user%20input%20is%20positive%0D%0Athis%20boolean%20condition%20would%20be%20false%20so%0D%0A%0D%0A00:02:54.910%20--%3E%2000:02:59.439%0D%0Awe%20are%20not%20changing%20user%20input%0D%0Abasically%20we\u0027re%20printing%20the%20original%0D%0A%0D%0A00:02:59.440%20--%3E%2000:03:04.840%0D%0Avalue%20but%20if%20the%20original%20value%20of%20user%0D%0Ainput%20was%20negative%20this%20boolean%0D%0A%0D%0A00:03:04.841%20--%3E%2000:03:09.040%0D%0Aexpression%20would%20be%20true%20and%20this%0D%0Acondition%20statement%20would%20be%20executed.%0D%0A%0D%0A00:03:09.041%20--%3E%2000:03:15.519%0D%0AAgain%20this%20if%20statement%20basically%0D%0Aconditions%20the%20execution%20of%20this%0D%0A%0D%0A00:03:15.520%20--%3E%2000:03:23.019%0D%0Astatement%20whether%20it%20would%20be%20executed%0D%0Aor%20not.%20So%20only%20when%20a%20user%20input%20is%20less%0D%0A%0D%0A00:03:23.020%20--%3E%2000:03:30.459%0D%0Athan%200,%20when%20user%20input%20is%20negative%20this%0D%0Astatement%20this%20sign%20flip%20would%20be%20would%0D%0A%0D%0A00:03:30.460%20--%3E%2000:03:38.379%0D%0Aoccur.%20Let\u0027s%20go%20ahead%20and%20test%20this%0D%0Aexecution.%20So%20it%20asks%20us%20to%20enter%20an%0D%0A%0D%0A00:03:38.380%20--%3E%2000:03:46.989%0D%0Ainteger,%20let\u0027s%20say%20negative%207%20and%20then%20it%0D%0Aprints%207%20again%20user%20input%20was%20negative%0D%0A%0D%0A00:03:46.990%20--%3E%2000:03:53.530%0D%0Athis%20statement%20was%20executed%20and%20then%0D%0Auser%20input%20eventually%20was,%20became%207%0D%0A%0D%0A00:03:53.531%20--%3E%2000:04:00.159%0D%0Athat\u0027s%20white%20printed%207.%20Same%20thing,%20or%20not%0D%0Asame%20thing,%20but%20if%20we%20executed%20again%20with%0D%0A%0D%0A00:04:00.160%20--%3E%2000:04:06.909%0D%0Athe%20value%20of%208%20then%20it%20would%20print%208%0D%0Athis%20boolean%20expression%20was%20false%20so%0D%0A%0D%0A00:04:06.910%20--%3E%2000:04:14.319%0D%0Athis%20condition%20statement%20wasn\u0027t%20executed%0D%0Awhich%20kept%20user%20input%20with%20its%20regional%0D%0A%0D%0A00:04:14.320%20--%3E%2000:04:22.680%0D%0Ainput%20regional%20value%20which%20was%208%20so%20it%0D%0Aremained%20being%208.%20Yeah%20since%20seems%20to%20be%0D%0A%0D%0A00:04:22.681%20--%3E%2000:04:32.619%0D%0Alooking%20good.%20One%20thing%20though,%0D%0Ait%20doesn\u0027t%20really%20follow%20the%20format%20that%0D%0A%0D%0A00:04:32.620%20--%3E%2000:04:38.169%0D%0Awe%20were%20asked%20to%20do,%20we%20were%20asked%20to%20a%0D%0Aprint%20that%20the%20absolute%20value%20of%0D%0A%0D%0A00:04:38.170%20--%3E%2000:04:43.779%0D%0Anegative%207%20equals%207%20so%20we%20should%20have%0D%0Athis%20pipe%20then%20negative%207%20pipe%20equals%0D%0A%0D%0A00:04:43.780%20--%3E%2000:04:52.809%0D%0Aand%207.%20The%20problem%20is%20that%20the%20original%0D%0Avalue%20the%20user%20entered%20initially%20is%20kind%0D%0A%0D%0A00:04:52.810%20--%3E%2000:04:57.309%0D%0Aof%20lost.%20If%20it%20is%20positive%20with%20remained%0D%0Awith%20its%20original%20value%20but%20if%20it%20was%0D%0A%0D%0A00:04:57.310%20--%3E%2000:05:05.169%0D%0Anegative,%20we%20just%20changed%20it%20to%20be%20the%0D%0Avalue%20times%20negative%201%20so%20the%20negative%207%0D%0A%0D%0A00:05:05.170%20--%3E%2000:05:14.999%0D%0Aat%20the%20point%20of%20the%20print%20statement%20here%0D%0Aat%20line%207%20is%20basically%20lost.%20In%20order%20to%0D%0A%0D%0A00:05:15.000%20--%3E%2000:05:23.740%0D%0Aget%20this%20behavior,%20there%20are%20a%20few%20ways%0D%0Ato%20go%20around%20that.%20The%20most%20clean%20way%20I%0D%0A%0D%0A00:05:23.741%20--%3E%2000:05:31.149%0D%0Athink%20would%20be%20to%20hold%20two%20variables%20one%0D%0Afor%20the%20original%20input%20and%20that%20value%0D%0A%0D%0A00:05:31.150%20--%3E%2000:05:36.069%0D%0Awould%20remain%20for%20the%20entire%20execution%0D%0Anot%20changed%20and%20a%20second%20variable%20we%0D%0A%0D%0A00:05:36.070%20--%3E%2000:05:40.300%0D%0Awill%20introduce%20would%20contain%20the%0D%0Aabsolute%20value,%20so%20if%20the%20original%20value%0D%0A%0D%0A00:05:40.301%20--%3E%2000:05:45.430%0D%0Awas%208%20the%20absolute%20value%20would%20be%208%20as%0D%0Awell%20but%20if%20the%20original%20value%20was%0D%0A%0D%0A00:05:45.431%20--%3E%2000:05:52.209%0D%0Anegative%207%20then%20the%20absolute%20value%20would%0D%0Abe%207%20so%20we%20would%20have%20negative%207%20and%207%0D%0A%0D%0A00:05:52.210%20--%3E%2000:05:56.229%0D%0Asimultaneously,%20we%20would%20have%20both%20of%0D%0Athese%20values%20in%20two%20separate%20variables%0D%0A%0D%0A00:05:56.230%20--%3E%2000:06:02.139%0D%0Aso%20at%20the%20time%20of%20when%20line%207%20would%20be%0D%0Aexecuted%20we%20would%20have%20these%20two%20values%0D%0A%0D%0A00:06:02.140%20--%3E%2000:06:08.019%0D%0Atogether%20that%20the%20output%20statement%20would%0D%0Aprint%20both%20of%20them.%20So%20we%20would%0D%0A%0D%0A00:06:08.020%20--%3E%2000:06:15.399%0D%0Aneed%20another%20variable,%20let\u0027s%20name%20it%0D%0Aabsolute%20ABS%20value%20absolute%20value%20so%20we%0D%0A%0D%0A00:06:15.400%20--%3E%2000:06:18.849%0D%0Awould%20have%20the%20user%20input%20that\u0027s%20one%0D%0Avariable%20and%20the%20new%20variable%20we%20just%0D%0A%0D%0A00:06:18.850%20--%3E%2000:06:25.719%0D%0Aintroduced%20abs%20value%20initially%20let\u0027s%20set%0D%0Aabs%20value%20to%20be%20user%20input%20and%20if%20user%0D%0A%0D%0A00:06:25.720%20--%3E%2000:06:30.490%0D%0Ainput%20is%20positive%20that\u0027s%20the%20final%20value%0D%0Aof%20the%20variable%20abs%20values%20also%0D%0A%0D%0A00:06:30.491%20--%3E%2000:06:36.339%0D%0Athat%20shouldn\u0027t%20change%20but%20if%20user%20input%0D%0Ais%20negative,%20then%20instead%20of%20changing%0D%0A%0D%0A00:06:36.340%20--%3E%2000:06:41.259%0D%0Auser%20input%20to%20be%20user%20in%20two%20times%0D%0Anegative%20one%20will%20change%20the%20absolute%0D%0A%0D%0A00:06:41.260%20--%3E%2000:06:45.950%0D%0Avalue%20variable%0D%0Ato%20be%20user%20input%20times%20negative%20one%20so%0D%0A%0D%0A00:06:45.951%20--%3E%2000:06:55.040%0D%0Aagain,%20and%20then%20in%20this%20point%20here,%20and%20so%0D%0Awe%20just%20took%20it%20one%20line%20we%20just%20added%0D%0A%0D%0A00:06:55.041%20--%3E%2000:06:59.390%0D%0Aanother%20line%20so%20now%20the%20print%20statement%20is%0D%0Ain%20line%20eight%20we%20have%20both%20the%20user%0D%0A%0D%0A00:06:59.391%20--%3E%2000:07:06.170%0D%0Ainput%20and%20the%20absolute%20value%20that%20we%20can%0D%0Aprint.%20So%20if%20the%20user%20input%20was%20positive,%0D%0A%0D%0A00:07:06.171%20--%3E%2000:07:14.060%0D%0Athen%20absolute%20value%20kept%20that%20value,%0D%0Adidn\u0027t--%20wasn\u0027t%20changed%20here%20in%20the%20if%0D%0A%0D%0A00:07:14.061%20--%3E%2000:07:19.820%0D%0Astatement%20because%20the%20the%20boolean%0D%0Aexpression%20wasn\u0027t%20true,%20and%20then%20we%20just%0D%0A%0D%0A00:07:19.821%20--%3E%2000:07:25.040%0D%0Aprinted%20both%20these%20values%20here%20in%20line%0D%0Aeight,%20but%20if%20the%20user%20input%20was%20negative%0D%0A%0D%0A00:07:25.041%20--%3E%2000:07:29.900%0D%0Athe%20absolute%20value%20was%20initially%0D%0Ainitialized%20to%20the%20negative%20value%20of%0D%0A%0D%0A00:07:29.901%20--%3E%2000:07:35.930%0D%0Auser%20input%20but%20then%20we%20just%20changed%20its%0D%0Avalue%20to%20be%20a%20user%20input%20times%20negative%0D%0A%0D%0A00:07:35.931%20--%3E%2000:07:42.920%0D%0Aone.%20Let\u0027s%20go%20ahead%20and%20test%20it%20really%0D%0Aquick.%20Okay,%20so%20maybe%20not%20really%20quick%20and%0D%0A%0D%0A00:07:42.921%20--%3E%2000:07:48.260%0D%0Anegative%20seven%20would%20give%20us%20negative%0D%0Aseven%20as%20user%20input%20and%20seven%20as%20the%0D%0A%0D%0A00:07:48.261%20--%3E%2000:07:58.880%0D%0Aabsolute%20value%20and%20if%20we%20have%20eight%20then%0D%0Athe%20user%20input%20would%20be%20eight%20and%20the%0D%0A%0D%0A00:07:58.881%20--%3E%2000:08:03.830%0D%0Aabsolute%20value%20is%20also%20eight,%20we%20get%20both%0D%0Athese%20eights%20here.%0D%0A%0D%0A00:08:03.831%20--%3E%2000:08:10.400%0D%0AOne%20last%20thing%20let\u0027s%20just%20have%20the%0D%0Aoutput%20at%20the%20same%20format%20of%20the%20pipe%0D%0A%0D%0A00:08:10.401%20--%3E%2000:08:17.510%0D%0Auser%20input%20and%20so%20on.%20So%20let%20me%20add%20the%0D%0Apipe%20symbol%20character%20here%20and%20then%20the%0D%0A%0D%0A00:08:17.511%20--%3E%2000:08:24.320%0D%0Avalue%20of%20user%20input%20and%20then%20another%0D%0Apipe%20equals%20and%20then%20the%20value%20of%0D%0A%0D%0A00:08:24.321%20--%3E%2000:08:29.570%0D%0Aabsolute%20value,%20so%20we%20would%20have%20a%0D%0Astatement%20of%20the%20form%20at%20the%20absolute%0D%0A%0D%0A00:08:29.571%20--%3E%2000:08:39.890%0D%0Avalue%20of%20user%20input%20equals%20apps%20value.%20If%0D%0Awe%20execute%20it,%20we%20get%20for%20negative%20seven%0D%0A%0D%0A00:08:39.891%20--%3E%2000:08:44.510%0D%0Athat%20the%20absolute%20value%20of%20negative%207%0D%0Aequals%207.%0D%0A%0D%0A00:08:44.511%20--%3E%2000:08:51.830%0D%0AOne%20last%20thing,%20let\u0027s%20get%20rid%20of%20these%0D%0Aspaces%20here%20and%20these%20spaces%20kind%20of%0D%0A%0D%0A00:08:51.831%20--%3E%2000:08:56.660%0D%0Awere%20added%20by%20the%20default%20spacing%20of%20the%0D%0Aparameters%20so%0D%0A%0D%0A00:08:56.661%20--%3E%2000:09:05.870%0D%0Alet\u0027s%20override%20the%20separator%20of%20value%20to%0D%0Abe%20an%20empty%20string.%20Something%20like%20that.%0D%0A%0D%0A00:09:05.871%20--%3E%2000:09:15.170%0D%0AAnd%20now%20I%20expect%20it%20to%20look%20exactly%20as%0D%0Awe%20planned%20it%20so%20negative%207%20would%0D%0A%0D%0A00:09:15.171%20--%3E%2000:09:26.750%0D%0Aprinted%20the%20absolute%20value%20of%20negative%207%0D%0Aequals%207%20and%20same%20thing%20for%208%20it%20just%0D%0A%0D%0A00:09:26.751%20--%3E%2000:09:31.000%0D%0Aprints%20the%20absolute%20value%20of%208%20equals%208.%20Cool.%0D%0A%0D%0A"}')