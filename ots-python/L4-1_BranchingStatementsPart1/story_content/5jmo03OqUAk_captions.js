window.globalProvideData('caption', '{"data":"WEBVTT%0D%0AKind:%20captions%0D%0ASource:%20Articulate%20Closed%20Captions%20Editor%0D%0ASource%20Version:%201.10.13923.0%0D%0A%0D%0A00:00:00.120%20--%3E%2000:00:04.200%0D%0AHey%20there,%20hope%20you\u0027re%20having%20a%20great%20day.%0D%0AToday%20we\u0027re%20going%20to%20talk%20about%0D%0A%0D%0A00:00:04.201%20--%3E%2000:00:10.470%0D%0Abranching%20statements.%20Let\u0027s%20get%20started%0D%0Awith%20a%20problem%20where%20we%20ask%20the%20user%20for%0D%0A%0D%0A00:00:10.471%20--%3E%2000:00:16.410%0D%0Aan%20integer%20and%20calculate%20the%20absolute%0D%0Avalue%20of%20this%20input.%20So%20the%20behavior%20of%0D%0A%0D%0A00:00:16.411%20--%3E%2000:00:20.070%0D%0Athis%20program%20should%20look%20something%20like%0D%0Athat%20first%20the%20program%20would%20ask%20the%0D%0A%0D%0A00:00:20.071%20--%3E%2000:00:25.199%0D%0Aother%20please%20enter%20an%20integer%20the%20user%0D%0Awould%20respond%20by%20for%20example%20negative%207%0D%0A%0D%0A00:00:25.200%20--%3E%2000:00:34.380%0D%0Aand%20then%20the%20program%20would%20say%20that%20the%0D%0Aabsolute%20value%20of%20negative%207%20equals%207.%20In%0D%0A%0D%0A00:00:34.381%20--%3E%2000:00:42.329%0D%0Aorder%20to%20implement%20this%20kind%20of%20a%0D%0Abehavior%20currently%20we%20have%20a%20flow%20that%0D%0A%0D%0A00:00:42.330%20--%3E%2000:00:47.969%0D%0Ais%20sequential%20in%20its%20nature%20basically%0D%0Aexecuting%20the%20instructions%20one%20after%20the%0D%0A%0D%0A00:00:47.970%20--%3E%2000:00:53.070%0D%0Aother%20in%20a%20sequential%20order.%20But%20if%20we%0D%0Alook%20closer%20at%20this%20behavior%20we\u0027re%0D%0A%0D%0A00:00:53.071%20--%3E%2000:00:59.070%0D%0Atrying%20to%20implement%20we%20see%20that%20it%20kind%0D%0Aof%20depends%20in%20some%20cases%20where%20the%20input%0D%0A%0D%0A00:00:59.071%20--%3E%2000:01:05.700%0D%0Ais%20positive%20the%20absolute%20value%20would%0D%0Aremain%20with%20the%20same%20value%20but%20if%20the%0D%0A%0D%0A00:01:05.701%20--%3E%2000:01:10.380%0D%0Ainput%20the%20user%20number%20that%20number%20the%0D%0Auser%20enters%20is%20basically%20negative%20in%0D%0A%0D%0A00:01:10.381%20--%3E%2000:01:16.429%0D%0Athis%20case%20we%20would%20need%20to%20flip%20the%20sign%0D%0Ahere%20and%20turn%20it%20into%20the%20positive%0D%0A%0D%0A00:01:16.430%20--%3E%2000:01:22.649%0D%0Aabsolute%20value.%20In%20order%20to%20implement%0D%0Athis%20kind%20of%20behavior%20a%20sequential%20flow%0D%0A%0D%0A00:01:22.650%20--%3E%2000:01:29.549%0D%0Awon\u0027t%20be%20good%20enough.%20We%20would%20need%20to%20do%0D%0Aone%20thing%20for%20some%20cases%20and%20another%0D%0A%0D%0A00:01:29.550%20--%3E%2000:01:36.090%0D%0Athing%20for%20other%20cases%20this%20kind%20of%20a%0D%0Aflow%20is%20called%20a%20branching%20of%20flow%20in%0D%0A%0D%0A00:01:36.091%20--%3E%2000:01:42.869%0D%0Aorder%20to%20be%20able%20to%20write%20programs%20that%0D%0Ause%20this%20kind%20of%20a%20flow%0D%0A%0D%0A00:01:42.870%20--%3E%2000:01:49.259%0D%0AI%20would%20first%20need%20to%20introduce%20a%20couple%0D%0Aof%20things.%20First%20thing%20I%20would%20want%20to%0D%0A%0D%0A00:01:49.260%20--%3E%2000:01:53.429%0D%0Aintroduce%20are%20boolean%20expressions.%0D%0ACurrently%20we%20have%20expressions%20there%20are%0D%0A%0D%0A00:01:53.430%20--%3E%2000:01:58.619%0D%0Aarithmetic%20expressions%20that%20their%20values%0D%0Aare%20basically%20numeric%20values.%20Boolean%0D%0A%0D%0A00:01:58.620%20--%3E%2000:02:05.249%0D%0Aexpressions%20would%20allow%20us%20to%20condition%0D%0Athe%20case%20we%20are%20at%20and%20condition%0D%0A%0D%0A00:02:05.250%20--%3E%2000:02:10.590%0D%0Abasically%20the%20set%20of%20instructions%20we%0D%0Awant%20to%20execute.%20So%20I%20would%20need%20to%20show%0D%0A%0D%0A00:02:10.591%20--%3E%2000:02:15.180%0D%0Ayou%20boolean%20expressions%20and%20for%20me%20to%20be%0D%0Aable%20to%20show%20you%20boolean%20expressions%20we%0D%0A%0D%0A00:02:15.181%20--%3E%2000:02:21.090%0D%0Afirst%20actually%20need%20to%20look%20at%20the%20bool%0D%0Adata%20type%20or%20boolean%20objects%20that%20have%0D%0A%0D%0A00:02:21.091%20--%3E%2000:02:29.400%0D%0Atrue%20and%20false%20values.%20So%20actually%20in%0D%0Aorder%20to%20eventually%20introduce%20you%20to%0D%0A%0D%0A00:02:29.401%20--%3E%2000:02:33.270%0D%0Abranching%20flow,%0D%0AI%20would%20first%20start%20with%20the%20boolean%0D%0A%0D%0A00:02:33.271%20--%3E%2000:02:38.100%0D%0Adata%20type,%20then%20we%20would%20go%20over%20to%20talk%0D%0Aabout%20boolean%20expressions,%20and%20after%0D%0A%0D%0A00:02:38.101%20--%3E%2000:02:43.800%0D%0Adoing%20that%20we%20will%20be%20able%20to%20master%20the%0D%0Asyntax%20of%20branching%20statements.%20Let\u0027s%20go%0D%0A%0D%0A00:02:43.801%20--%3E%2000:02:48.739%0D%0Aahead%20and%20get%20started%20talking%20about%0D%0Aboolean%20data%20types.%0D%0A%0D%0A"}')