window.globalProvideData('caption', '{"data":"WEBVTT%0D%0AKind:%20captions%0D%0ASource:%20Articulate%20Closed%20Captions%20Editor%0D%0ASource%20Version:%201.11.14249.0%0D%0A%0D%0A00:00:03.440%20--%3E%2000:00:12.719%0D%0AOkay,%20so%20we%20would%0D%0Astart%20with%20defining%20the%20main%20function.%20So%0D%0A%0D%0A00:00:12.720%20--%3E%2000:00:17.960%0D%0Adef%20main%20colons%20and%20here%20should%20come%0D%0Acome%20the%20body.%20I\u0027ll%20just%20create%20a%20few%0D%0A%0D%0A00:00:17.961%20--%3E%2000:00:24.060%0D%0Aheaders%20of%20functions,%20so%20I\u0027ll%20wait%20with%0D%0Athe%20implementation%20of%20main.%20I\u0027ll%20use%20pass.%0D%0A%0D%0A00:00:24.061%20--%3E%2000:00:27.960%0D%0AI%20don\u0027t%20know%20if%20you\u0027ve%20mentioned%20it%20before.%0D%0APass%20is%20basically%20an%20instruction%20that%0D%0A%0D%0A00:00:27.961%20--%3E%2000:00:34.469%0D%0Adoes%20nothing,%20so%20it\u0027s%20just%20a%20placeholder%0D%0Afor%20the%20body%20that%20would%20come%20soon.%20We%0D%0A%0D%0A00:00:34.470%20--%3E%2000:00:40.260%0D%0Asaid%20that%20the%20main%20has%20four%20major%20steps:%0D%0Ato%20read%20a%20string,%20to%20prepare%20a%20string%20for%0D%0A%0D%0A00:00:40.261%20--%3E%2000:00:43.379%0D%0Apalindrome%20checking,%20to%20check%20whether%0D%0Ait\u0027s%20a%20palindrome,%20and%20to%20announce%20the%0D%0A%0D%0A00:00:43.380%20--%3E%2000:00:48.600%0D%0Aresults.%20So%20reading%20and%20announcing%20the%0D%0Aresult%20are%20primitive,%20so%20we%20don\u0027t%20need%0D%0A%0D%0A00:00:48.601%20--%3E%2000:00:52.860%0D%0Aany%20functions%20for%20that.%20But%20preparing%20a%0D%0Astring%20for%20palindrome%20checking%20would%0D%0A%0D%0A00:00:52.861%20--%3E%2000:01:03.559%0D%0Arequire%20a%20function,%20so%20let\u0027s%20define%20a%0D%0Afunction%20for%20that.%20Prepare%20STR%20for%0D%0A%0D%0A00:01:04.850%20--%3E%2000:01:15.600%0D%0Achecking.%20That%20would%20get%20a%20string.%20Let\u0027s%0D%0Asay%20s%20and,%20again,%20let\u0027s%20keep%20the%0D%0A%0D%0A00:01:15.601%20--%3E%2000:01:21.090%0D%0Aimplementation%20for%20later.%20So%20we%20have%20a%0D%0Afunction%20for%20that.%20And%20also%20to%20check%0D%0A%0D%0A00:01:21.091%20--%3E%2000:01:24.869%0D%0Awhether%20a%20given%20string%20is%20a%0D%0Apalindrome,%20so%20let\u0027s%20define%20a%20function.%0D%0A%0D%0A00:01:24.870%20--%3E%2000:01:31.040%0D%0AI\u0027ll%20name%20it%20is_palindrome,%20since%20it\u0027s%20a%0D%0Aboolean%20function%20I%20like%20to%20name%20it%20with%0D%0A%0D%0A00:01:31.041%20--%3E%2000:01:34.680%0D%0Aa%20name%20that%20you%20wanna%20respond%20with%20yes%0D%0Aor%20no.%0D%0A%0D%0A00:01:34.681%20--%3E%2000:01:43.680%0D%0ASo%20is_palindrome%20is%20such%20a%20name.%20Again%20given%0D%0As,%20it%20would%20return%20true%20if%20and%20only%20if%20s%0D%0A%0D%0A00:01:43.681%20--%3E%2000:01:49.649%0D%0Ais%20a%20palindrome.%20So%20we%20have%20these%20three%0D%0Afunctions%20and%20when%20we\u0027ll%20implement%20the%0D%0A%0D%0A00:01:49.650%20--%3E%2000:01:55.740%0D%0Aprepare%20a%20function,%20we\u0027ll%20probably%20define%0D%0Aa%20keep_only_%20letters%20function.%20When%20we\u0027ll%0D%0A%0D%0A00:01:55.741%20--%3E%2000:02:01.560%0D%0Aimplement%20the%20is_palindrome,%20we\u0027ll%0D%0Aprobably%20implement%20a%20reverse%20function,%0D%0A%0D%0A00:02:01.561%20--%3E%2000:02:08.340%0D%0Abut%20at%20this%20point%20for%20the%20main,%20we%20have%0D%0Athese%20two%20functions.%20So%20the%20main%20would%0D%0A%0D%0A00:02:08.341%20--%3E%2000:02:12.619%0D%0Astart%20asking%20the%20user,%20%22Please%0D%0A%0D%0A00:02:14.210%20--%3E%2000:02:25.940%0D%0Aenter%20a%20string,%22%20and%20then%20user_string%0D%0A%0D%0A00:02:27.530%20--%3E%2000:02:34.380%0D%0Aequals%20input.%20Note%20that%20we%20don\u0027t%20need%20to%0D%0Aconvert%20it%20in%20this%20case.%20At%20this%20point,%20since%0D%0A%0D%0A00:02:34.381%20--%3E%2000:02:39.840%0D%0Awe%20just%20want%20it%20as%20a%20string%20And%20input%0D%0Areturns%20the%20string.%20And%20then%20once%20we\u0027re%0D%0A%0D%0A00:02:39.841%20--%3E%2000:02:45.030%0D%0Agiven%20a%20string,%20we%20want%20to%20prepare%20it%0D%0Afor...%20so%20that%20is%20step%20number%20one.%20So%20step%0D%0A%0D%0A00:02:45.031%20--%3E%2000:02:47.940%0D%0Anumber%20two%20is%20preparing%20it%20for%0D%0Apalindrome%20checking.%20We%20basically%20just%0D%0A%0D%0A00:02:47.941%20--%3E%2000:02:52.710%0D%0Acall%20this%20function.%20So%20let\u0027s%20call%20this%0D%0Afunction%20prepare_str_for%0D%0A%0D%0A00:02:52.711%20--%3E%2000:02:59.880%0D%0Apalindrome%20_checking,%20giving%20the%20user%0D%0Astring%20as%20an%20input,%20right?%20And%20let\u0027s%0D%0A%0D%0A00:02:59.881%20--%3E%2000:03:08.250%0D%0Asave%20the%20result%20here,%20str_for_checking.%0D%0AThat%20would%20be%20the%20variable%20that%20would%0D%0A%0D%0A00:03:08.251%20--%3E%2000:03:13.410%0D%0Astore%20the%20string%20that%20we%20want%20to%20check.%0D%0AAfter%20we%20do%20that,%20let\u0027s%20check%20whether%0D%0A%0D%0A00:03:13.411%20--%3E%2000:03:17.250%0D%0Ait\u0027s%20palindrome.%20So%20we\u0027re%20done%20with%20step%0D%0Anumber%20two,%20now%20step%20number%20three:%20check%0D%0A%0D%0A00:03:17.251%20--%3E%2000:03:27.000%0D%0Awhether%20it\u0027s%20palindrome.%20So%20let\u0027s%20call%20is_palindrome,%20and%20pass%20the%20str%20for%20checking.%0D%0A%0D%0A00:03:27.001%20--%3E%2000:03:31.410%0D%0AThat%20is%20what%20the%20prepare%20function%0D%0Abasically%20returned%20as%20a%20parameter.%20The%0D%0A%0D%0A00:03:31.411%20--%3E%2000:03:37.160%0D%0Aresult,%20I\u0027ll%20just%20store%20in%20a%20variable%0D%0Anamed%20res,%20so%20I\u0027ll%20have%20that.%20And%20then,%0D%0A%0D%0A00:03:37.161%20--%3E%2000:03:45.090%0D%0Adepending%20on%20the%20value%20of%20res,%20so%20if%20res%0D%0Ais%20true,%20let\u0027s%20announce%20the%20output%20here.%0D%0A%0D%0A00:03:45.091%20--%3E%2000:04:08.610%0D%0ASo%20let\u0027s%20print%20that%20%22Your%20sentence%20is%0D%0Apalindrome%22%20else%20let\u0027s%20print%20that%20%22Your%0D%0A%0D%0A00:04:08.611%20--%3E%2000:04:15.110%0D%0Asentence%20is%20not%20a%20palindrome.%22%0D%0A%0D%0A00:04:16.360%20--%3E%2000:04:22.850%0D%0ASomething%20like%20that.%20So%20this%20is%20the%20main.%20As%20you%20can%0D%0Asee,%20we%20have%20step%20number%20one%20to%20here,%20and%0D%0A%0D%0A00:04:22.851%20--%3E%2000:04:29.840%0D%0Athen%20step%20number%20two,%20step%20number%20three,%0D%0Aand%20noticing%20the%20output,%20that%20is%20step%0D%0A%0D%0A00:04:29.841%20--%3E%2000:04:39.260%0D%0Anumber%20four.%20Now%20let\u0027s%20go%20ahead%20and%0D%0Aimplement%20these%20functions%20that%20take%20care%0D%0A%0D%0A00:04:39.261%20--%3E%2000:04:43.490%0D%0Aof%20step%20number%20two%20and%20step%20number%20three.%0D%0ALet\u0027s%20start%20with%20the%20prepare%20function%0D%0A%0D%0A00:04:43.491%20--%3E%2000:04:47.960%0D%0Afor%20step%20number%20two.%20So%20we%20need%20to%0D%0Aprepare%20a%20string%20for%20palindrome%20checking,%0D%0A%0D%0A00:04:47.961%20--%3E%2000:04:54.590%0D%0Awhich%20we%20said%20that%20this%20is%20done%20in%20two%0D%0Asub%20steps:%20keep%20only%20letters%20and%20take%0D%0A%0D%0A00:04:54.591%20--%3E%2000:05:02.510%0D%0Aletters%20to%20lowercase.%20Let\u0027s%20have%20a%0D%0Afunction%20for%20these%20sub%20steps.%20So%20keep_%0D%0A%0D%0A00:05:02.511%20--%3E%2000:05:15.620%0D%0Aonly_letters,%20that%20is%20given%0D%0Aan%20S%20and%20it%20would%20return%20the%20string%20with%0D%0A%0D%0A00:05:15.621%20--%3E%2000:05:19.400%0D%0Aonly%20the%20letters%20in%20it.%20We%20don\u0027t%20need%20a%0D%0Afunction%20that%20would%20take%20everything%20to%0D%0A%0D%0A00:05:19.401%20--%3E%2000:05:25.490%0D%0Alowercase.%20We%20have%20that.%20So%20assuming%20we%0D%0Ahave%20a%20keep_only_letters%20function,%0D%0A%0D%0A00:05:25.491%20--%3E%2000:05:30.680%0D%0Athe%20prepare%20string%20for%20palindrome%0D%0Achecking%20would%20call%20keep_only_letters%0D%0A%0D%0A00:05:30.681%20--%3E%2000:05:47.030%0D%0Awith%20the%20given%20s,%20right?%20That%20would%20be%20only_letters_str.%20And%20then%20let\u0027s%20take%20only_%0D%0A%0D%0A00:05:47.031%20--%3E%2000:05:55.490%0D%0Aletters_str%20dot%20lower,%20and%20that%20would%20be%0D%0Athe%20lowercase%20version%20we%20would%20want%20to%0D%0A%0D%0A00:05:55.491%20--%3E%2000:06:03.320%0D%0Areturn.%20Then%20would%20want%20to%20return%20that%0D%0Avalue%20from%20from%20our%20function,%20so%20the%0D%0A%0D%0A00:06:03.321%20--%3E%2000:06:08.300%0D%0Aprepare%20function,%20as%20expected,%20is%20kind%20of%0D%0Aa%20two%20line%20function.%20We%20are%20keeping%20only%0D%0A%0D%0A00:06:08.301%20--%3E%2000:06:13.810%0D%0Athe%20letters%20and%20we%20are%20taking%20these%0D%0Aletters%20basically%20to%20lowercase,%0D%0A%0D%0A00:06:13.811%20--%3E%2000:06:18.800%0D%0Areturning%20that%20value.%20That%20value%20that%20is%0D%0Areturned,%20by%20the%20way,%20would%20be%20eventually%0D%0A%0D%0A00:06:18.801%20--%3E%2000:06:24.830%0D%0Astored%20in%20this%20variable%20here%20in%20the%20main.%0D%0ASo%20that%20would%20be%20the%20value%20of%20this%0D%0A%0D%0A00:06:24.831%20--%3E%2000:06:30.060%0D%0Afunction%20call%20that%20would,%0D%0Aafter%20returning,%20would%20be%20stored%20in%20the%0D%0A%0D%0A00:06:30.061%20--%3E%2000:06:36.740%0D%0Avariable%20in%20line%20number%204,%20keep_only_%0D%0Aletters.%20Let\u0027s%20implement%20that.%20That%20is%0D%0A%0D%0A00:06:36.741%20--%3E%2000:06:44.970%0D%0Abasically%20a%20function%20that,%20given%20a%20string,%0D%0Afilters%20only%20the%20letters%20and%20keeps%20only%0D%0A%0D%0A00:06:44.971%20--%3E%2000:06:51.150%0D%0Athe%20letters%20in%20it.%20So%20let\u0027s%20have%20a%20result_%0D%0Astr%20that%20would%20be%20initialized%20to%20an%0D%0A%0D%0A00:06:51.151%20--%3E%2000:06:57.750%0D%0Aempty%20string.%20Eventually%20we\u0027ll%20return%20it.%0D%0ALet\u0027s%20return%20this%20result%20as%20they%20are,%20but%0D%0A%0D%0A00:06:57.751%20--%3E%2000:07:03.750%0D%0Ain%20between%20these%20two%20initialization,%20the%0D%0Areturn%20statement.%20we%20would%20need%20to%0D%0A%0D%0A00:07:03.751%20--%3E%2000:07:12.780%0D%0Aaccumulate%20the%20letters%20from%20if%20in%20that%0D%0Aresult%20string.%20So%20let\u0027s%20iterate%20%22for%20char%0D%0A%0D%0A00:07:12.781%20--%3E%2000:07:21.510%0D%0Ain%20s%22,%20basically%20for%20each%20character%20in%20s%0D%0Alet\u0027s%20check%20whether%20it\u0027s%20a%20letter%20or%20not.%0D%0A%0D%0A00:07:21.511%20--%3E%2000:07:29.820%0D%0AAnd%20then%20keep%20that%20in%20that%20case.%20So%20i%20don\u0027t%20know%20if%0D%0Awe\u0027ve%20talked%20about%20it.%20Let%20me%0D%0A%0D%0A00:07:29.821%20--%3E%2000:07:39.660%0D%0Aopen%20the%20console%20for%20that.%20So%20let\u0027s%20say%0D%0Awe%20have%20s%20equals...%20I%20don\u0027t%20know...%20A,%20and%20then%0D%0A%0D%0A00:07:39.661%20--%3E%2000:07:49.380%0D%0Awe%20can%20have%20s%20dot%20is%20alpha%20basically%20is%0D%0Aa%20method%20that%20returns%20whether%20the%20string%0D%0A%0D%0A00:07:49.381%20--%3E%2000:07:55.200%0D%0Acontains%20only%20alpha%20alphabetical%20values.%0D%0ASo%20in%20this%20case,%20A%20is%20considered%20to%20be%0D%0A%0D%0A00:07:55.201%20--%3E%2000:08:01.800%0D%0Aalpha.%20If%20s%20would%20be,%20for%20example%204,%20then%0D%0Ais%20alpha%20would%20be%20false.%0D%0A%0D%0A00:08:01.801%20--%3E%2000:08:10.919%0D%0AAlso%20if%20s%20would%20be,%20let\u0027s%20say%20the%20dollar%0D%0Asign,%20then%20is%20alpha%20would%20be%20false.%20But%0D%0A%0D%0A00:08:10.920%20--%3E%2000:08:15.840%0D%0Aif%20s%20is%20a%20letter,%20it%20doesn\u0027t%20matter%20if%0D%0Ait\u0027s%20lowercase%20or%20uppercase.%20Here%20I%20have%0D%0A%0D%0A00:08:15.841%20--%3E%2000:08:23.160%0D%0Auppercase%20A.%20Is%20alpha%20would%20return%20true.%0D%0AThat%20is%20true%20for%20a%20single%20character%0D%0A%0D%0A00:08:23.161%20--%3E%2000:08:29.340%0D%0Astring,%20but%20also%20for%20multiple%20characters.%0D%0ASo%20ABCABC,%20they%20are%20all%20alpha.%20That%20would%0D%0A%0D%0A00:08:29.341%20--%3E%2000:08:37.070%0D%0Abe%20true,%20but%20if%20in%20our%20string%20we%20have%20a%0D%0Anon-alphabetical%20character,%20for%20example%0D%0A%0D%0A00:08:37.071%20--%3E%2000:08:43.430%0D%0Athis,%20symbol%20here,%20then%20is%20alpha%20would%20return%0D%0A%0D%0A00:08:43.431%20--%3E%2000:08:51.200%0D%0Afalse.%20In%20our%20case%20here,%20in%20this%20keep%0D%0Aonly%20letters,%20a%20char%20is%20basically%20a%0D%0A%0D%0A00:08:51.201%20--%3E%2000:09:02.390%0D%0Asingle%20character%20string.%20So%20we%20can%20ask%20if%0D%0Achar%20dot%20is%20alpha.%20Oh%20my%20god.%20The%20computer%0D%0A%0D%0A00:09:02.391%20--%3E%2000:09:16.700%0D%0Afroze.%20Okay,%20just%20a%20second.%0D%0Ais%20alpha,%20here%20it%20is,%20if%20it%20returns%20true,%0D%0A%0D%0A00:09:16.701%20--%3E%2000:09:29.230%0D%0Athen%20we%20want%20to%20take%20it%20into%20a%20res%0D%0Astring.%20So%20res_str%20equals%20res_str%0D%0A%0D%0A00:09:29.231%20--%3E%2000:09:34.760%0D%0Aplus%20this%20char,%20otherwise%20we%20don\u0027t%20want%0D%0Ato%20take%20it.%20So%20you%20won\u0027t%20have%20an%20S%20here.%0D%0A%0D%0A00:09:34.761%20--%3E%2000:09:39.770%0D%0AIt%20won\u0027t%20be%20taken.%20So%20basically%20we\u0027re%0D%0Aaccumulating%20all%20the%20letters,%20that%20is%0D%0A%0D%0A00:09:39.771%20--%3E%2000:09:45.320%0D%0Akeep%20only%20letters.%20We\u0027re%20returning%20that%0D%0Ares_str%20after%20done%20iterating%20over%20all%0D%0A%0D%0A00:09:45.321%20--%3E%2000:09:52.400%0D%0Athe%20characters%20in%20s.%20And%20after%20we%20have%0D%0Athat,%20we%20we%20should%20implement%20step%20number%0D%0A%0D%0A00:09:52.401%20--%3E%2000:09:56.180%0D%0Athree,%20the%20main%20step%20number%20three,%20which%0D%0Ais%20to%20check%20whether%20a%20string%20is%20a%0D%0A%0D%0A00:09:56.181%20--%3E%2000:10:01.790%0D%0Apalindrome.%20We%20said%20that%20this%20is%20done%20by%0D%0Areversing%20the%20string%20and%20then%20comparing%0D%0A%0D%0A00:10:01.791%20--%3E%2000:10:11.300%0D%0Athe%20original%20with%20a%20reversed%20form.%20So%0D%0Alet\u0027s%20define%20reverse_str.%0D%0A%0D%0A00:10:11.301%20--%3E%2000:10:18.380%0D%0AThat%20is%20given%20an%20s%20and%20would%20create%0D%0Athe%20reversed%20form%20of%20s.%20I\u0027ll%20keep%20it%20passed%0D%0A%0D%0A00:10:18.381%20--%3E%2000:10:24.890%0D%0Afor%20now,%20but%20I%20will%20implement%20it%20in%20a%20second.%0D%0AAssuming%20we%20have%20that,%20let\u0027s%20have%20rev_str%0D%0A%0D%0A00:10:24.891%20--%3E%2000:10:33.080%0D%0Aequals%20whatever%20the%20reverse_str%0D%0Areturns%20for%20the%20given%20string,%20so%20we%0D%0A%0D%0A00:10:33.081%20--%3E%2000:10:43.460%0D%0Areversed%20s.%20And%20then,%20let\u0027s%20compare%20if%20s%0D%0Ais%20the%20same%20as,%20maybe%20we%20should%20call%20it%0D%0A%0D%0A00:10:43.461%20--%3E%2000:10:49.670%0D%0Arev_s.%20Our%20string%20is%20called%20s.%20I%20think%0D%0Arev_s%20would%20be%20a%20better%20name%20here.%20So%20if%20s%0D%0A%0D%0A00:10:49.671%20--%3E%2000:11:02.740%0D%0Aequals%20rev_s,%0D%0Ayou%20want%20to%20return%20true.%0D%0A%0D%0A00:11:02.741%20--%3E%2000:11:10.930%0D%0AOtherwise%20we%20would%20want%20to%0D%0Areturn%20false.%20So%20as%20you%20can%20see,%20we%20have%0D%0A%0D%0A00:11:10.931%20--%3E%2000:11:16.589%0D%0Astep%20number%20one:%20find%20the%20reverse%20form%20of%0D%0As%20and%20then%20compare%20it%20to%20the%20original%0D%0A%0D%0A00:11:16.590%20--%3E%2000:11:21.310%0D%0Astring.%20If%20they%20are%20the%20same,%0D%0Athe%20string%20is%20considered%20to%20be%20a%0D%0A%0D%0A00:11:21.311%20--%3E%2000:11:27.910%0D%0Apalindrome.%20Otherwise%20it%20is%20not.%20One%20thing%0D%0Athough,%20just%20a%20small%20comment.%20Instead%20of%0D%0A%0D%0A00:11:27.911%20--%3E%2000:11:43.390%0D%0Ahaving%20this%20entire%20if%20statement,%20we%20can%0D%0Aequivalently%20just%20return%20that%20value%20here,%0D%0A%0D%0A00:11:43.391%20--%3E%2000:11:48.070%0D%0Areturn%20whether%20s%20double%20equals%20rev_s.%0D%0ASo%20if%20they%20are%20equal,%20it%20would%20return%0D%0A%0D%0A00:11:48.071%20--%3E%2000:11:52.150%0D%0Atrue.%20That%20is%20the%20value%20of%20this%0D%0Aexpression.%20If%20they%20are%20not%20equal,%20it%20would%0D%0A%0D%0A00:11:52.151%20--%3E%2000:11:58.330%0D%0Areturn%20false.%20So%20we%20can%20either%20write%20that%0D%0Aor%20have%20the%20explicit%20if%20expression,%0D%0A%0D%0A00:11:58.331%20--%3E%2000:12:04.990%0D%0Awhichever%20you%20prefer.%20I\u0027ll%20keep%20the%0D%0Aexplicit%20one.%20And%20the%20last%20thing%20we%20need%20to%0D%0A%0D%0A00:12:04.991%20--%3E%2000:12:16.690%0D%0Ado%20is%20a%20reverse,%20reverse%20string%20function.%0D%0ASo%20yeah%20let\u0027s%20go%20ahead%20and%20do%20that.%20So%0D%0A%0D%0A00:12:16.691%20--%3E%2000:12:22.060%0D%0Aonce%20again,%20I\u0027ll%20accumulate%20the%20result,%20so%0D%0AI\u0027ll%20have%20res_str%20that%20would%20be%0D%0A%0D%0A00:12:22.061%20--%3E%2000:12:32.080%0D%0Ainitially%20empty.%20Eventually%20I\u0027ll%20return%0D%0Athat%20res_str.%20And%20then%20I\u0027ll%20just%20go%0D%0A%0D%0A00:12:32.081%20--%3E%2000:12:35.709%0D%0Aahead%20and%20accumulate%20the%20string%20in%20a%0D%0Areverse%20order.%20To%20do%20that%20I\u0027ll%0D%0A%0D%0A00:12:35.710%20--%3E%2000:12:41.680%0D%0Abasically%20iterate%20over%20the%20string%20in%20its%0D%0Aoriginal%20order.%20So%20let\u0027s%20say%20ABC%20and%20each%0D%0A%0D%0A00:12:41.681%20--%3E%2000:12:49.839%0D%0Acharacter,%20I%20just%20add%20to%20the%20start,%0D%0Aright?%20So%20initially%20I\u0027ll%20add%20A,%20and%20then%20B%0D%0A%0D%0A00:12:49.840%20--%3E%2000:12:54.250%0D%0Awould%20be%20at%20the%20start.%20So%20it%20would%20be%20BA.%0D%0AAnd%20then%20C%20would%20be%20at%20the%20start,%20so%20it%0D%0A%0D%0A00:12:54.251%20--%3E%2000:13:00.900%0D%0Awould%20be%20CBA%20altogether.%20It%20accumulates%0D%0Athe%20string%20in%20a%20reverse%20order.%20So%20%22for%0D%0A%0D%0A00:13:00.901%20--%3E%2000:13:10.619%0D%0Achar%20in%20s%22,%20let\u0027s%20take%20res_str%20and%20add%20char%0D%0A%0D%0A00:13:10.620%20--%3E%2000:13:18.740%0D%0Ato%20the%20start%20of%20rev_str.%20So%20rev_str...%0D%0A%0D%0A00:13:18.741%20--%3E%2000:13:24.459%0D%0Ajust%20a%20second.%20Rev_str,%20just%20like%20that.%0D%0A%0D%0A00:13:24.460%20--%3E%2000:13:31.809%0D%0ASo%20initially%20res_str%20is%20empty,%20and%0D%0Athen%20I\u0027m%20adding,%20let\u0027s%20say%20A,%20to%20the%20empty%0D%0A%0D%0A00:13:31.810%20--%3E%2000:13:38.429%0D%0Astring.%20Then%20I\u0027m%20adding%20B%20to%20the%20A,%20and%20C%0D%0Ato%20be%20A,%20and%20so%20on.%20so%20altogether%20I%0D%0A%0D%0A00:13:38.430%20--%3E%2000:13:44.589%0D%0Aaccumulate%20the%20string%20in%20the%20reverse%0D%0Aorder,%20which%20I\u0027m%20returning.%20That%20seems%20to%0D%0A%0D%0A00:13:44.590%20--%3E%2000:13:49.959%0D%0Abe%20about%20it.%0D%0ALet\u0027s%20call%20main%20and%20just%20execute%20it,%20see%0D%0A%0D%0A00:13:49.960%20--%3E%2000:13:58.920%0D%0Athat%20we%20got%20it%20correctly.%20So%20it%20asked%20us%0D%0Aplease%20enter%20string.%0D%0A%0D%0A00:13:58.949%20--%3E%2000:14:17.170%0D%0ALet\u0027s%20have%20%22was%20it%20a%20car%20or%20a%20cat%20I%20saw%22%0D%0Aand%20it%20says%20that%20your%20sentence%20is%20a%0D%0A%0D%0A00:14:17.171%20--%3E%2000:14:21.629%0D%0Apalindrome.%20If%20we\u0027ll%20execute%20it%20again,%0D%0A%0D%0A00:14:26.519%20--%3E%2000:14:37.899%0D%0Alet\u0027s%20do%20%22was%20it%20a%20cow%20or%20a%20cat%20I%20saw%22.%20Now%0D%0Aexpecting%20to%20see%20that%20it%20would%20say%20that%0D%0A%0D%0A00:14:37.900%20--%3E%2000:14:43.749%0D%0Ait\u0027s%20not%20a%20palindrome.%20Yeah,%20so%20it%20seems%20it%0D%0Aseems%20to%20be%20working%20okay.%20One%20last%20thing%0D%0A%0D%0A00:14:43.750%20--%3E%2000:14:48.850%0D%0AI%20want%20to%20mention%20is%20that%20we%20use%20the%0D%0Aapproach%20of%20reversing%20for%20checking%0D%0A%0D%0A00:14:48.851%20--%3E%2000:14:52.209%0D%0Awhether%20the%20string%20is%20a%20palindrome,%20to%0D%0Areverse%20a%20string%20and%20check%20the%20reverse%0D%0A%0D%0A00:14:52.210%20--%3E%2000:14:56.259%0D%0Aform%20with%20the%20original%20form,%20there%20could%0D%0Abe%20another%20approach%20of%20kind%20of%20iterating%0D%0A%0D%0A00:14:56.260%20--%3E%2000:15:02.410%0D%0Aover%20the%20string%20from%20both%20ends%20and%0D%0Averifying%20that%20it%20always%20has%20the%20same%0D%0A%0D%0A00:15:02.411%20--%3E%2000:15:08.949%0D%0Avalue.%20So%20if%20you%20go%20from%20both%20ends,%20it%0D%0Areads%20the%20same,%20we%20can%20definitely%0D%0A%0D%0A00:15:08.950%20--%3E%2000:15:12.879%0D%0Aimplement%20is_palindrome%20using%20that%0D%0Aapproach.%20And%20then%20you%20just%20need%20to%0D%0A%0D%0A00:15:12.880%20--%3E%2000:15:17.110%0D%0Achange%20the%20code%20in%20the%20function,%20and%20that%0D%0Awould%20affect%20the%0D%0A%0D%0A00:15:17.111%20--%3E%2000:15:21.100%0D%0Aentire%20program.%20So%20if%20you\u0027re%20using,%0D%0Areusing%20is%20palindrome,%20not%20that%20we\u0027re%0D%0A%0D%0A00:15:21.101%20--%3E%2000:15:24.490%0D%0Adoing%20it%20in%20this%20program%20because%20we\u0027re%0D%0Ausing%20it%20only%20once,%20but%20if%20you%20would%20have%0D%0A%0D%0A00:15:24.491%20--%3E%2000:15:29.649%0D%0Aused%20the%20is_palindrome%20function%0D%0Amore%20than%20once,%20you%20can%20change%20the%0D%0A%0D%0A00:15:29.650%20--%3E%2000:15:35.170%0D%0Aalgorithm%20one%20place%20and%20it%20would%20affect%0D%0Athe%20entire...%20all%20the%20code,%20basically%20the%0D%0A%0D%0A00:15:35.171%20--%3E%2000:15:43.510%0D%0Aentire%20execution.%20That%20could%20be%20a%20nice%0D%0Apractice%20program%20for%20you%20to%20maybe%20change%0D%0A%0D%0A00:15:43.511%20--%3E%2000:15:49.089%0D%0Athe%20implementation%20of%20is_palindrome%20to%0D%0Awork%20from%20kind%20of%20both%20ends%20of%20the%0D%0A%0D%0A"}')