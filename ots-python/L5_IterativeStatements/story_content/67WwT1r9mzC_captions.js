window.globalProvideData('caption', '{"data":"WEBVTT%0D%0AKind:%20captions%0D%0ASource:%20Articulate%20Closed%20Captions%20Editor%0D%0ASource%20Version:%201.11.14249.0%0D%0A%0D%0A00:00:00.470%20--%3E%2000:00:06.220%0D%0AOkay,%20you\u0027ll%20see%20once%20you%20start%0D%0Aprogramming%20that%20it%20takes%20time%20to%20master%0D%0A%0D%0A00:00:06.221%20--%3E%2000:00:12.349%0D%0Awriting%20code%20using%20loops,%20Let\u0027s%20take%20a%0D%0Alook%20at%20a%20few%20more%20examples.%20First,%20let\u0027s%0D%0A%0D%0A00:00:12.350%20--%3E%2000:00:17.180%0D%0Atry%20to%20write%20a%20program%20that%20basically%0D%0Aprints%20a%20multiplication%20table.%20So%20our%0D%0A%0D%0A00:00:17.181%20--%3E%2000:00:21.080%0D%0Aprogram%20would%20read%20from%20the%20user%20a%0D%0Apositive%20integer%20n,%20and%20then%20it%20would%0D%0A%0D%0A00:00:21.081%20--%3E%2000:00:25.400%0D%0Aprint%20an%20n%20by%20n%20multiplication%20table.%20So%0D%0Aan%20interaction%20could%20look%20something%0D%0A%0D%0A00:00:25.401%20--%3E%2000:00:29.480%0D%0Alike%20that.%20It%20would%20first%20ask%20the%20user%0D%0Afor%20a%20positive%20integer.%20The%20user%20can,%20for%0D%0A%0D%0A00:00:29.481%20--%3E%2000:00:35.089%0D%0Aexample,%20say%205.%20And%20then%20the%20program%20would%0D%0Ajust%20print%20a%205%20by%205%20multiplication%20table,%0D%0A%0D%0A00:00:35.090%20--%3E%2000:00:41.480%0D%0Aright?%20So%201%20times%201,%201,%20%202%20...%20So%20like%20something%0D%0Alike%20that.%20Before%20we%20go%20ahead%20and%20do%0D%0A%0D%0A00:00:41.481%20--%3E%2000:00:49.249%0D%0Aexactly%20that,%20let\u0027s%20take%20a%20step%20back%20and%0D%0Ado%20an%20easier%20problem,%20a%20sub%20problem%20of%20a%0D%0A%0D%0A00:00:49.250%20--%3E%2000:00:54.440%0D%0Amultiplication%20table%20basically%20printing%0D%0Athe%20single%20row%20a%20single%20line%20of%20the%0D%0A%0D%0A00:00:54.441%20--%3E%2000:00:59.329%0D%0Amultiplication%20table.%20So%20let\u0027s%20first%0D%0Awrite%20a%20program%20that%20reads%20a%20positive%0D%0A%0D%0A00:00:59.330%20--%3E%2000:01:05.750%0D%0Ainteger%20n%20and%20prints%20the%20first%20n%0D%0Amultiplications%20of%203.%20Basically%20printing%0D%0A%0D%0A00:01:05.751%20--%3E%2000:01:11.480%0D%0Athe%20third%20line%20of%20the%20multiplication%0D%0Atable.%20So%20for%20example,%20if%20the%20user%20enters%0D%0A%0D%0A00:01:11.481%20--%3E%2000:01:15.860%0D%0A5%20after%20being%20asked%20for%20a%20positive%0D%0Ainteger,%20it%20would%20print%20the%20first%205%0D%0A%0D%0A00:01:15.861%20--%3E%2000:01:22.340%0D%0Amultiplications%20of%203,%20which%20is%203%20times%201,%0D%0A3%20times%202,%203%20times%203,%203%20times%204,%20and%203%0D%0A%0D%0A00:01:22.341%20--%3E%2000:01:29.390%0D%0Atimes%205.%20The%205%20first%20multiplications%20of%203,%0D%0Awhich%20are%203,%206,%209,%2012,%20and%2015.%0D%0A%0D%0A00:01:29.391%20--%3E%2000:01:35.030%0D%0ASo%20we\u0027ll%20just%20print%20basically%20the%20first,%0D%0Asorry,%20the%20third%20line%20of%20the%0D%0A%0D%0A00:01:35.031%20--%3E%2000:01:40.820%0D%0Amultiplication%20table.%20Let\u0027s%20go%20ahead%20and%0D%0Ado%20that.%20So%20let\u0027s%20ask%20the%20user%20for%20a%0D%0A%0D%0A00:01:40.821%20--%3E%2000:01:48.560%0D%0Apositive%20integer,%20read%20that%20into%20a%0D%0Avariable%20named%20n,%20and%20then%20in%20order%20to%0D%0A%0D%0A00:01:48.561%20--%3E%2000:01:53.990%0D%0Abasically%20print%20the%20first%20n%0D%0Amultiplications%20of%203,%20we\u0027ll%20have%20to%20do%20a%0D%0A%0D%0A00:01:53.991%20--%3E%2000:01:59.990%0D%0Aprint%20statement%20repeated%20n%20times.%20So%0D%0Alet\u0027s%20use%20a%20for%20loop%20to%20repeat%20something%0D%0A%0D%0A00:01:59.991%20--%3E%2000:02:07.880%0D%0An%20times.%20Let\u0027s%20use%20the%20range%201%20through%20n%0D%0Aplus%201,%20basically%20having%20a%20collection%20of%0D%0A%0D%0A00:02:07.881%20--%3E%2000:02:14.240%0D%0A1,%202,%203,%204,%20up%20to%20n,%20n%20values.%20That%20would%0D%0Amake%20our%20for%20loop%20body%0D%0A%0D%0A00:02:14.241%20--%3E%2000:02:20.090%0D%0Arepeated%20n%20times.%20First%20iteration%20i%20would%0D%0Abe%20one,%20second%20iteration%20i%20would%20be%20two,%0D%0A%0D%0A00:02:20.091%20--%3E%2000:02:24.590%0D%0Athird%20iteration%20i%20would%20be%20three,%20and%20so%0D%0Aon.%20But%20we%20are%20not%20interested%20in%20printing%0D%0A%0D%0A00:02:24.591%20--%3E%2000:02:27.650%0D%0Athe%20value%20of%20i,%20right?%0D%0AWe\u0027re%20not%20interesting%20in%20printing%20one,%0D%0A%0D%0A00:02:27.651%20--%3E%2000:02:34.700%0D%0Atwo,%20three,%20four.%20We%20want%20to%20print%201%20times%0D%0A3,%20and%202%20times%203,%20and%203%20times%203,%20and%204%20times%0D%0A%0D%0A00:02:34.701%20--%3E%2000:02:39.440%0D%0A3,%20and%20so%20on.%20So%20basically%20we%20want%20to%0D%0Aprint%203%20times%20i%20every%20time%20(or%20i%20times%203).%0D%0A%0D%0A00:02:39.441%20--%3E%2000:02:44.750%0D%0ASo%20our%20first%20iteration%20will%20print%203%0D%0Atimes%201.%20Second%20iteration%20will%20print%203%0D%0A%0D%0A00:02:44.751%20--%3E%2000:02:49.790%0D%0Atimes%202.%20Third%20iteration%20will%20print%203%0D%0Atimes%203,%20and%20so%20on.%20Last%20iteration%20will%0D%0A%0D%0A00:02:49.791%20--%3E%2000:02:55.630%0D%0Aprint%203%20times%20n.%20That%20would%20all%20together%0D%0Aprint%20the%20first%20n%20multiplications%20of%203.%0D%0A%0D%0A00:02:55.631%20--%3E%2000:03:02.180%0D%0ALet\u0027s%20go%20ahead%20and%20see%20how%20this%20thing%0D%0Abasically%20is%20executed%20after%20reading%20the%0D%0A%0D%0A00:03:02.181%20--%3E%2000:03:08.570%0D%0Avalue%20of%205%20from%20the%20user%20that%20would%0D%0Arepeat%20this%20print%20statement%205%20times,%0D%0A%0D%0A00:03:08.571%20--%3E%2000:03:13.430%0D%0Athat%20would%20print%20the%20first%205%0D%0Amultiplications%20of%203.%20Tthe%20thing%20is%20that%0D%0A%0D%0A00:03:13.431%20--%3E%2000:03:19.280%0D%0Ait%20does%20print%203,%206,%209,%2012,%20and%2015,%20which%20are%0D%0Athe%20first%20500%20implications%20of%203,%20but%0D%0A%0D%0A00:03:19.281%20--%3E%2000:03:25.910%0D%0Asince%20the%20print%20statement%20by%20default%20ends%0D%0Awith%20breaking%20the%20line%20it%20would%20print%0D%0A%0D%0A00:03:25.911%20--%3E%2000:03:31.460%0D%0Athese%205%20first%20multiplications%20of%203%20in%0D%0Afive%20separate%20lines.%20And%20that\u0027s%20not%20what%0D%0A%0D%0A00:03:31.461%20--%3E%2000:03:37.220%0D%0Awe%20wanted.%20We%20wanted%20to%20print%20it%20in%20one%0D%0Asingle%20line.%20In%20order%20to%20do%20that,%20just%20as%0D%0A%0D%0A00:03:37.221%20--%3E%2000:03:43.670%0D%0Awe%20could%20have%20overridden%20the%20default%0D%0Aspacing%20of%20parameters%20of%20the%20print%0D%0A%0D%0A00:03:43.671%20--%3E%2000:03:49.750%0D%0Astatement%20by%20overriding%20the%20%22sep%22%0D%0Aparameter,%20we%20can%20override%20the%20end%0D%0A%0D%0A00:03:49.751%20--%3E%2000:03:55.580%0D%0Aparameter%20of%20the%20print%20statement%20saying,%0D%0A%22Okay%20we%20don\u0027t%20want%20to%20end%20the%20print%0D%0A%0D%0A00:03:55.581%20--%3E%2000:04:01.160%0D%0Astatement%20with%20the%20default%20ending,%20which%0D%0Ais%20a%20line%20break.%20We%20want%20to%20end%20it%20with,%0D%0A%0D%0A00:04:01.161%20--%3E%2000:04:09.440%0D%0Afor%20example,%20a%20tab%20character.%20So%20that%0D%0Awould%20print%20a%20value%20and%20not%20break%20the%0D%0A%0D%0A00:04:09.441%20--%3E%2000:04:15.410%0D%0Aline,%20but%20tab%20for%20the%20ending.%20And%20then%20it%0D%0Awould,%20second%20iteration,%20would%20print%20a%0D%0A%0D%0A00:04:15.411%20--%3E%2000:04:22.040%0D%0Avalue%20and%20end%20it%20with%20the%20tab,%20and%20so%20on.%0D%0ASo%20once%20we%20read,%20for%20example,%20a%20value%0D%0A%0D%0A00:04:22.041%20--%3E%2000:04:27.440%0D%0Afrom%20the%20user,%20for%20example,%20the%0D%0Avalue%205.%20Now%20that%20we%20are%20repeating%20the%0D%0A%0D%0A00:04:27.441%20--%3E%2000:04:35.150%0D%0Aprint%20statement%20with%20an%20overridden%20end,%20it%0D%0Awould%20print%203,%206,%209,%2012,%20and%2015%20in%20one%0D%0A%0D%0A00:04:35.151%20--%3E%2000:04:44.510%0D%0Asingle%20line.%20Basically%203,%20tab,%206,%20tab,%209,%20tab,%0D%0A12,%20tab,%20and%2015,%20tab.%20That%20basically%20would%0D%0A%0D%0A00:04:44.511%20--%3E%2000:04:51.320%0D%0Abring%20our%20cursor%20at%20the%20end%20of%20the%20line.%0D%0AActually%20one%20tab%20after%20the%2015,%20which%20is%0D%0A%0D%0A00:04:51.321%20--%3E%2000:04:56.600%0D%0Aalmost%20what%20we%20want.%20But%20in%20order%20to%20get%0D%0Aready%20to%20prepare%20for%20the%20next%20line,%20we%20do%0D%0A%0D%0A00:04:56.601%20--%3E%2000:05:03.050%0D%0Awant%20to%20break%20the%20line%20one%20time%20at%20the%0D%0Aend.%20So%20after%20printing%20all%20of%20that,%20we%0D%0A%0D%0A00:05:03.051%20--%3E%2000:05:07.370%0D%0Ashould%20then%20just%20make%20an%20empty%20print%0D%0Astatement%20not%20to%20print%20anything,%20but%0D%0A%0D%0A00:05:07.371%20--%3E%2000:05:11.540%0D%0Abasically%20to%20break%20the%20line.%0D%0AOnce%20we%20do%20that%20after%20the%20fourth%0D%0A%0D%0A00:05:11.541%20--%3E%2000:05:15.500%0D%0Astatement,%20that%20would%20bring%20our%20cursor%0D%0Adown%20to%20the%20beginning%20of%20the%20next%20line.%0D%0A%0D%0A00:05:15.501%20--%3E%2000:05:20.990%0D%0ASo%20altogether%20we\u0027re%20basically%20printing%0D%0Athree%20ending%20with%20the%20tab,%206%20ending%20with%0D%0A%0D%0A00:05:20.991%20--%3E%2000:05:25.730%0D%0Aa%20tab,%20and%20so%20on.%20Then%20one%20print%0D%0Astatement%20to%20break%20the%20line%20and%20bring%0D%0A%0D%0A00:05:25.731%20--%3E%2000:05:31.850%0D%0Athe%20cursor%20ready%20for%20the%20next%20line%20once%0D%0Awe%20use%20it%20for%20a%20multiplication%20table.%0D%0A%0D%0A00:05:31.851%20--%3E%2000:05:38.960%0D%0ALet\u0027s%20keep%20that%20in%20mind,%20all%20of%20that%20in%0D%0Amind,%20when%20we%20want%20to%20implement%20the%0D%0A%0D%0A00:05:38.961%20--%3E%2000:05:42.890%0D%0Aprogram%20for%20printing%20a%20full%0D%0Amultiplication%20table.%20Let\u0027s%20go%20ahead%20and%0D%0A%0D%0A00:05:42.891%20--%3E%2000:05:44.832%0D%0Aimplement%20it.%0D%0A%0D%0A"}')