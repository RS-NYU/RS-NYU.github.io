window.globalProvideData('caption', '{"data":"WEBVTT%0D%0AKind:%20captions%0D%0ASource:%20Articulate%20Closed%20Captions%20Editor%0D%0ASource%20Version:%201.11.14249.0%0D%0A%0D%0A00:00:00.250%20--%3E%2000:00:05.589%0D%0AOkay,%20so%20we%20mentioned%20multiple%20times%20that%0D%0Athere%20is%20a%20lot%20of%20similarities%20between%0D%0A%0D%0A00:00:05.590%20--%3E%2000:00:10.990%0D%0Alists%20and%20strings.%20Let\u0027s%20go%20ahead%20and%0D%0Acompare%20them%20with%20a%20few%20clear%20criteria.%0D%0A%0D%0A00:00:10.991%20--%3E%2000:00:18.400%0D%0ASo%20first,%20both%20of%20them,%20I%20would%20say%20that%0D%0Athere%20are%20sequential%20collections,%20right?%0D%0A%0D%0A00:00:18.401%20--%3E%2000:00:25.060%0D%0AYou%20can%20have%20you%20have%20indices,%20slices%20for%0D%0Aboth%20lists%20and%20strings.%0D%0A%0D%0A00:00:25.061%20--%3E%2000:00:29.529%0D%0AThey\u0027re%20both%20iterable,%20right?%20You%20can%0D%0Aiterate%20over%20the%20elements%20in%20the%20list.%0D%0A%0D%0A00:00:29.530%20--%3E%2000:00:33.940%0D%0AYou%20can%20iterate%20over%20the%20characters%20in%20a%0D%0Astring%20using%20a%20for%20loop.%20So%20they%20are%0D%0A%0D%0A00:00:33.941%20--%3E%2000:00:38.560%0D%0Aboth%20iterable%20collections.%20So%20basically%20I%0D%0Awould%20say%20that%20they%20are%20both%20iterable,%0D%0A%0D%0A00:00:38.561%20--%3E%2000:00:43.450%0D%0Asequential%20collections.%20But%20they%20are%0D%0Aalso%20different%20from%20one%20another.%0D%0A%0D%0A00:00:43.451%20--%3E%2000:00:48.550%0D%0AFirst%20difference%20is%20the%20type%20of%20elements%0D%0Athat%20each%20one%20of%20these%20collections%20can%0D%0A%0D%0A00:00:48.551%20--%3E%2000:00:54.580%0D%0Astore.%20So%20for%20lists,%20you%20can%20store%20any%0D%0Atype%20of%20elements%20you%20wish,%20where%20in%0D%0A%0D%0A00:00:54.581%20--%3E%2000:00:59.710%0D%0Astrings%20it\u0027s%20necessarily%20a%20collection%20of%0D%0Acharacters.%20So%20it\u0027s%20only%20characters%20that%0D%0A%0D%0A00:00:59.711%20--%3E%2000:01:05.680%0D%0Ayou\u0027re%20storing%20there.%20And%20another%20major%0D%0Adifference%20between%20lists%20and%20strings%20is%0D%0A%0D%0A00:01:05.681%20--%3E%2000:01:13.450%0D%0Athe%20mutability.%20So%20we\u0027ve%20already%20said%0D%0Athat%20lists%20are%20mutable%20structures.%20You%0D%0A%0D%0A00:01:13.451%20--%3E%2000:01:19.930%0D%0Acan%20assign%20a%20new%20element%20at%20an%20index%0D%0Aposition.%20When%20you%20use%20append%20it%20mutates%0D%0A%0D%0A00:01:19.931%20--%3E%2000:01:26.490%0D%0Ait,%20updates%20it,%20modifies%20the%20object.%20In%20the%0D%0Acase%20of%20strings,%20strings%20are%20immutable%0D%0A%0D%0A00:01:26.491%20--%3E%2000:01:32.560%0D%0Aobjects.%20We%20will%20see%20some%20demonstrations%0D%0Alater%20on,%20but%20for%20example,%20you%20know%20that%0D%0A%0D%0A00:01:32.561%20--%3E%2000:01:38.110%0D%0Ayou%20cannot%20assign,%20I%20don\u0027t%20know,%20str%205%0D%0Aequals%20another%20letter.%20That%20is%20not%0D%0A%0D%0A00:01:38.111%20--%3E%2000:01:45.010%0D%0Avalid.%20You\u0027ll%20get%20an%20error%20when%20you%20try%0D%0Ato%20do%20that.%20Yeah,%20so%20let\u0027s%20go%20ahead%20and%0D%0A%0D%0A00:01:45.011%20--%3E%2000:01:50.740%0D%0Asee%20some%20examples%20demonstrating%20the%0D%0Amutability%20of%20lists%20and%20also%20the%0D%0A%0D%0A00:01:50.741%20--%3E%2000:01:54.389%0D%0Aimmutability%20of%20strings.%20Let\u0027s%20go%20ahead%0D%0Aand%20do%20that.%0D%0A%0D%0A"}')