window.globalProvideData('caption', '{"data":"WEBVTT%0D%0AKind:%20captions%0D%0ASource:%20Articulate%20Closed%20Captions%20Editor%0D%0ASource%20Version:%201.11.14249.0%0D%0A%0D%0A00:00:00.790%20--%3E%2000:00:04.830%0D%0AHi%20guys!%20Hope%20you\u0027re%20having%20a%20wonderful%0D%0Aday.%20Today%20we\u0027re%20going%20to%20talk%20about%0D%0A%0D%0A00:00:04.831%20--%3E%2000:00:10.269%0D%0Alists.%20First,%20let\u0027s%20take%20a%20second%20look%20at%0D%0Aa%20program%20or%20a%20problem%20we\u0027ve%20already%0D%0A%0D%0A00:00:10.270%20--%3E%2000:00:16.480%0D%0Aworked%20on%20where%20we%20needed%20to%20compute%20an%0D%0Aaverage.%20So%20we%20read%20a%20sequence%20of%20grades%0D%0A%0D%0A00:00:16.481%20--%3E%2000:00:20.740%0D%0Afrom%20the%20user%0D%0A\u0027til%20they%20enter%20done.%20And%20then%20we%0D%0A%0D%0A00:00:20.741%20--%3E%2000:00:24.070%0D%0Acalculated%20and%20printed%20the%20average.%20So%20an%0D%0Ainteraction%20looks%20something%20like%20that.%0D%0A%0D%0A00:00:24.071%20--%3E%2000:00:30.240%0D%0AFirst%20the%20program%20prompts%20the%20user%20to%20enter%0D%0Asome%20grades.%20The%20user%20entered,%20I%20dunno,%2071%0D%0A%0D%0A00:00:30.241%20--%3E%2000:00:36.460%0D%0A86,%2068,%2094,%20and%20then%20the%20word%20%22done.%22%20And%0D%0Aafter%20that,%20the%20program%20announced%20that%0D%0A%0D%0A00:00:36.461%20--%3E%2000:00:43.090%0D%0Athe%20class%20average%20is%2079.75.%20If%20we%0D%0Atake%20a%20second%20look%20at%20the%20code,%20we%20had%0D%0A%0D%0A00:00:43.091%20--%3E%2000:00:48.310%0D%0Awhen%20we%20implemented%20it,%20you%20see%20we%20have%0D%0Athis%20while%20loop%20that%20basically%20reads%0D%0A%0D%0A00:00:48.311%20--%3E%2000:00:55.320%0D%0Agrades%20one%20after%20the%20other%20using%20a%20flag%0D%0Ato%20control%20when%20to%20stop%20this%20repetitive%0D%0A%0D%0A00:00:55.321%20--%3E%2000:01:03.730%0D%0Ainput.%20But%20I%20want%20you%20to%20focus%20on%20the%0D%0Aelse%20clause%20in%20our%20while%20loop,%20where%0D%0A%0D%0A00:01:03.731%20--%3E%2000:01:11.200%0D%0Ayou%20see%20that%20in%20order%20to%20figure%20out%20the%0D%0Aaverage,%20we%20basically%20accumulated%20the%20sum%0D%0A%0D%0A00:01:11.201%20--%3E%2000:01:14.710%0D%0Aof%20all%20of%20the%20grades.%20We%20had%20a%20grade_sum%0D%0Avariable%20that%20each%0D%0A%0D%0A00:01:14.711%20--%3E%2000:01:20.049%0D%0Aiteration%20we%20just%20added%20to%20that%0D%0Aaccumulator%20the%20current%20grade.%20We%20also%0D%0A%0D%0A00:01:20.050%20--%3E%2000:01:24.280%0D%0Acounted%20the%20number%20of%20students.%20We%20had%0D%0Athe%20student%20count%20each%20time%20we%20plus%0D%0A%0D%0A00:01:24.281%20--%3E%2000:01:31.659%0D%0Aequals%20one,%20this%20counter.%20And%20when%20we\u0027re%0D%0Aout%20of%20the%20loop,%20we%20had%20the%20total%20sum%20in%0D%0A%0D%0A00:01:31.660%20--%3E%2000:01:35.680%0D%0Athe%20grade_sum%20variable,%20the%20total%20count%0D%0Ain%20the%20student_count%20variable,%20and%20then%0D%0A%0D%0A00:01:35.681%20--%3E%2000:01:40.030%0D%0Awe%20just%20divided%20them%20in%20order%20to%20figure%0D%0Aout%20the%20average.%20So%20this%20is%20the%0D%0A%0D%0A00:01:40.031%20--%3E%2000:01:43.900%0D%0Aimplementation%20we%20already%20gave.%20By%20the%0D%0Away,%20if%20you\u0027re%20not%20comfortable%20just%20go%0D%0A%0D%0A00:01:43.901%20--%3E%2000:01:48.369%0D%0Aback%20to%20the%20lesson%20when%20we\u0027ve%20talked%0D%0Aabout%20iterative%20statements%20and%20you\u0027ll%0D%0A%0D%0A00:01:48.370%20--%3E%2000:01:52.450%0D%0Asee%20the%20example%20there%20in%20much%20more%0D%0Adetail.%20What%20I%20want%20to%20do%20now%20is%0D%0A%0D%0A00:01:52.451%20--%3E%2000:01:59.619%0D%0Abasically%20to%20extend%20this%20program%20a%20bit.%0D%0AThat%20not%20only%20will%20get%20only%20the%20average%0D%0A%0D%0A00:01:59.620%20--%3E%2000:02:05.229%0D%0Agrade%20of%20the%20student,%20will%20also%20print%20the%0D%0Aones%20that%20are%20above%20the%20average.%20So%20an%0D%0A%0D%0A00:02:05.230%20--%3E%2000:02:08.259%0D%0Ainteraction%20now%20would%20look%20something%0D%0Alike%20that.%20First%20the%20program%20would%20prompt%0D%0A%0D%0A00:02:08.260%20--%3E%2000:02:12.939%0D%0Athe%20user%20to%20enter%20the%20grade,%20press%20done%0D%0Aor%20type%20%22done%22%20when%20they\u0027re%20done.%20They%0D%0A%0D%0A00:02:12.940%20--%3E%2000:02:16.480%0D%0Awould%20type%20the%0D%0Asequence%20of%20grades%20and%20%22done%22%20at%20the%20end.%0D%0A%0D%0A00:02:16.481%20--%3E%2000:02:22.220%0D%0AAnd%20the%20program%20not%20only%20would%20report%0D%0Athat%20the%20class%20average%20is%2079.75,%0D%0A%0D%0A00:02:22.221%20--%3E%2000:02:25.320%0D%0Ait%20would%20also%20say%20that%20the%20grades%20above%20the%20average%20are%0D%0A%0D%0A00:02:25.480%20--%3E%2000:02:33.160%0D%0Abasically%2086%20and%2094.%0D%0ALet\u0027s%20stop%20and%20think%20for%20a%20second%20how%20we%0D%0A%0D%0A00:02:33.161%20--%3E%2000:02:38.670%0D%0Acan%20implement%20this%20kind%20of%20a%20behavior.%20So%0D%0Awhen%20we%20wanted%20to%20calculate%20the%20average%0D%0A%0D%0A00:02:38.671%20--%3E%2000:02:47.950%0D%0Agrade,%20it%20seemed%20that%20we%20just%20need%20to%0D%0Abasically%20accumulate%20the%20sum%20and%20have%20an%0D%0A%0D%0A00:02:47.951%20--%3E%2000:02:53.140%0D%0Aupdated%20count.%20And%20then%20we%20can%20just%0D%0Afigure%20out%20the%20average.%20We%20just%20divide%0D%0A%0D%0A00:02:53.141%20--%3E%2000:02:56.980%0D%0Athe%20sum%20by%20the%20count%20and%20we%20have%20the%0D%0Aaverage.%20But%20in%20order%20to%20figure%20out%20the%0D%0A%0D%0A00:02:56.981%20--%3E%2000:03:02.500%0D%0Agrades%20that%20are%20above%20the%20average,%20it%0D%0Aseems%20that%20we%20would%20need%20a%20second%20pass%0D%0A%0D%0A00:03:02.501%20--%3E%2000:03:07.930%0D%0Aover%20the%20data%20after%20we%20figure%20out%20what%0D%0Athe%20average%20is%20to%20look%20at%20each%20grade%20and%0D%0A%0D%0A00:03:07.931%20--%3E%2000:03:12.190%0D%0Asee%20which%20ones%20are%20above%20the%20average%20or%0D%0Awhich%20aren\u0027t%20ones%20are%20below%20the%20average.%0D%0A%0D%0A00:03:12.191%20--%3E%2000:03:17.170%0D%0AWe%20can\u0027t%20do%20that,%20we%20can\u0027t%20decide%20whether%0D%0Aa%20number,%20whether%20a%20grade%20basically%20is%0D%0A%0D%0A00:03:17.171%20--%3E%2000:03:22.870%0D%0Aabove%20the%20average%20or%20below%20the%20average%0D%0Abefore%20we\u0027ve%20seen%20the%20entire%20collection%0D%0A%0D%0A00:03:22.871%20--%3E%2000:03:27.490%0D%0Aof%20grades.%20When%20we%20see%2071,%20we%0D%0Adon\u0027t%20know%20what%20the%20average%20grade%20is%0D%0A%0D%0A00:03:27.491%20--%3E%2000:03:31.090%0D%0Agoing%20to%20be%20and%20if%2071%20is%20going%0D%0Ato%20be%20above%20or%20below%20the%20average.%20So%20it%0D%0A%0D%0A00:03:31.091%20--%3E%2000:03:37.330%0D%0Aseems%20like%20we%20need%20a%20few%20passes%20over%20the%0D%0Adata%20in%20order%20to%20determine%20the%20grades%0D%0A%0D%0A00:03:37.331%20--%3E%2000:03:44.710%0D%0Athat%20are%20above%20the%20average.%20The%20problem%0D%0Ais%20that%20the%20user%20types%20the%20numbers%20only%0D%0A%0D%0A00:03:44.711%20--%3E%2000:03:50.110%0D%0Aone%20time,%20only%20a%20single%20time.%20So%20when%20we%0D%0Aread%20the%20data,%20we%20can%20calculate%20the%0D%0A%0D%0A00:03:50.111%20--%3E%2000:03:56.410%0D%0Aaverage,%20but%20we%20don\u0027t%20have%20the%20data%0D%0Aretyped%20again%20to%20go%20over%20them%20and%20see%0D%0A%0D%0A00:03:56.411%20--%3E%2000:04:02.410%0D%0Awhich%20ones%20are%20above%20the%20average.%20So%20in%0D%0Aorder%20to%20implement%20or%20to%20have%20this%20kind%0D%0A%0D%0A00:04:02.411%20--%3E%2000:04:08.470%0D%0Aof%20a%20behavior,%20it%20seems%20like%20we%20would%0D%0Aneed%20to%20keep,%20to%20store,%20to%20save%20these%0D%0A%0D%0A00:04:08.471%20--%3E%2000:04:14.830%0D%0Adata%20while%20we%20read%20them,%20so%20later%20on%20we%0D%0Acan%20go%20over%20them%20one%20more%20time%20and%20see%0D%0A%0D%0A00:04:14.831%20--%3E%2000:04:22.020%0D%0Awhich%20ones%20are%20above%20the%20average%20or%20not.%0D%0AYeah,%20so%20let\u0027s%20take%20a%20look%20at%20the%0D%0A%0D%0A00:04:22.021%20--%3E%2000:04:27.240%0D%0Aconstructs,%20the%20syntactic%20constructs,%20we%0D%0Ahave%20in%20Python%20so%20far%20and%20see%20how%20we%20can%0D%0A%0D%0A00:04:27.241%20--%3E%2000:04:31.919%0D%0Asupport,%20how%20we%20can%20implement%20this%20kind%0D%0Aof%20behavior%20where%20we%20want%20to%20store%20all%0D%0A%0D%0A00:04:31.920%20--%3E%2000:04:39.210%0D%0Athe%20data.%20And%20it%20seems%20that%20the%20only%20data%0D%0Atypes,%20the%20only%20data%20objects%20we%20currently%0D%0A%0D%0A00:04:39.211%20--%3E%2000:04:46.560%0D%0Ahave%20basically%20store%20a%20single%20data.%0D%0AEither%20it\u0027s%20an%20integer%20or%20a%20float%20a%0D%0A%0D%0A00:04:46.561%20--%3E%2000:04:51.720%0D%0Aboolean.%20Actually%20a%20string%20can%20store%0D%0Amultiple%20characters,%20but%20still%20it\u0027s%0D%0A%0D%0A00:04:51.721%20--%3E%2000:04:56.550%0D%0Aa%20single%20kind%20of%20text%20that%20we%20have%0D%0Athere.%20And%20if%20we%20want%20to%20store,%20in%20this%0D%0A%0D%0A00:04:56.551%20--%3E%2000:05:02.370%0D%0Acase,%20%20multiple%20ints,%20at%20this%20point%20we%0D%0Awould%20need%20to%20use%20multiple%20variables.%20But%0D%0A%0D%0A00:05:02.371%20--%3E%2000:05:08.610%0D%0Aagain,%20since%20we%20don\u0027t%20know%20how%20many%0D%0Agrades%20the%20user%20is%20gonna%20type%20in,%20we%0D%0A%0D%0A00:05:08.611%20--%3E%2000:05:14.310%0D%0Adon\u0027t%20know%20how%20many%20variables%20we%20should%0D%0Ahave%20here.%20Obviously%20we%20don\u0027t%20know%20that%0D%0A%0D%0A00:05:14.311%20--%3E%2000:05:19.680%0D%0Awhen%20we%20are%20writing,%20when%20we\u0027re%20coding%0D%0Athe%20program.%20We%20would%20figure%0D%0A%0D%0A00:05:19.681%20--%3E%2000:05:24.840%0D%0Ait%20out%20only%20during%20runtime.%20So%20in%20order%0D%0Ato%20implement%20this%20kind%20of%20a%20behavior,%20we%0D%0A%0D%0A00:05:24.841%20--%3E%2000:05:29.880%0D%0Awould%20need%20to%20store,%20to%20save%20all%20the%20data%0D%0Ain%20some%20kind%20of%20a%20data%20structure,%20in%20some%0D%0A%0D%0A00:05:29.881%20--%3E%2000:05:37.650%0D%0Akind%20of%20a%20collection%20that%20would%20hold%20all%0D%0Athe%20data%20in%20it.%20The%20built-in,%20most%0D%0A%0D%0A00:05:37.651%20--%3E%2000:05:42.570%0D%0Abasic%20collection%20that%20Python%20supports%20is%0D%0Acalled%20the%20list,%20and%20this%20is%20basically%0D%0A%0D%0A00:05:42.571%20--%3E%2000:05:45.472%0D%0Awhat%20we\u0027re%20going%20to%20do%20today.%0D%0A%0D%0A"}')