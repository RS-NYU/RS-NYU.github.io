window.globalProvideData('caption', '{"data":"WEBVTT%0D%0AKind:%20captions%0D%0ASource:%20Articulate%20Closed%20Captions%20Editor%0D%0ASource%20Version:%201.10.13923.0%0D%0A%0D%0A00:00:01.000%20--%3E%2000:00:04.950%0D%0AOkay,%20let\u0027s%20start%20talking%20about%20the%20integer%0D%0Adata%20type.%0D%0A%0D%0A00:00:04.951%20--%3E%2000:00:11.030%0D%0ASo%20when%20we%20have%20an%20integer%20data,%20it%20basically%0D%0Arepresents%20integer%20numbers.%0D%0A%0D%0A00:00:11.031%20--%3E%2000:00:12.030%0D%0AThat\u0027s%20obvious.%0D%0A%0D%0A00:00:12.031%20--%3E%2000:00:17.230%0D%0ABut%20let\u0027s%20talk%20in%20more%20detail%20about%20the%20way%0D%0Athese%20integer%20numbers%20are%20represented%20internally,%0D%0A%0D%0A00:00:17.231%20--%3E%2000:00:20.210%0D%0Ainside%20the%20memory%20using%20zeros%20and%20ones.%0D%0A%0D%0A00:00:20.211%20--%3E%2000:00:26.199%0D%0ASo%20we\u0027ve%20already%20seen%20that%20when%20we%20want%20to%0D%0Arepresent%20a%20data,%20we%20want%20to%20represent%20numbers,%0D%0A%0D%0A00:00:26.200%20--%3E%2000:00:33.540%0D%0Awe%20can%20use%20the%20binary%20number%20system%20that%20basically%0D%0Ahas%20two%20digits,%20zero%20and%20one.%0D%0A%0D%0A00:00:33.541%20--%3E%2000:00:37.030%0D%0AIt%20makes%20sense%20to%20use%20that%20in%20order%20to%20represent%0D%0Aintegers.%0D%0A%0D%0A00:00:37.031%20--%3E%2000:00:44.520%0D%0AThe%20thing%20is%20that%20integers%20can%20be%20positive%0D%0Aor%20negative.%0D%0A%0D%0A00:00:44.521%20--%3E%2000:00:51.220%0D%0AAnd%20we%20need%20to%20address%20both%20types%20of%20numbers%0D%0Aso%20they%20can%20all%20be%20represented%20internally%0D%0A%0D%0A00:00:51.221%20--%3E%2000:00:52.220%0D%0Ainside%20the%20memory.%0D%0A%0D%0A00:00:52.221%20--%3E%2000:00:56.960%0D%0ALet\u0027s%20take%20a%20look%20here%20at,%20for%20example,%20the%0D%0Adecimal%20twenty-six.%0D%0A%0D%0A00:00:56.961%20--%3E%2000:01:02.730%0D%0AAs%20a%20binary%20number,%20it%20would%20look%20as%2011010.%0D%0A%0D%0A00:01:02.731%20--%3E%2000:01:04.210%0D%0ARight.%0D%0A%0D%0A00:01:04.211%20--%3E%2000:01:06.700%0D%0AWe%20have%20these%20digits.%0D%0A%0D%0A00:01:06.701%20--%3E%2000:01:09.110%0D%0AEach%20digit%20has%20its%20own%20weight.%0D%0A%0D%0A00:01:09.111%20--%3E%2000:01:16.840%0D%0AThe%20first,%20or%20the%20least%20significant%20digit,%0D%0Athe%20right%20digit,%20the%20right%20most%20digit%20is%20zero%0D%0A%0D%0A00:01:16.841%20--%3E%2000:01:18.659%0D%0Aof%20weight%20one.%0D%0A%0D%0A00:01:18.660%20--%3E%2000:01:26.090%0D%0AAnd%20then%20one%20of%20weight%202,%20zero%20of%20weight%204,%0D%0Aone%20of%20weight%208%20and%20one%20of%20weight%2016.%0D%0A%0D%0A00:01:26.091%20--%3E%2000:01:33.450%0D%0ABasically%20when%20we%20add%20up%20one%20times%2016%20plus%0D%0Aone%20times%208%20plus%20zero%20times%204%20plus%20one%20times%0D%0A%0D%0A00:01:33.451%20--%3E%2000:01:37.920%0D%0A2%20plus%20zero%20times%201,%20that%20adds%20up%20to%2026.%0D%0A%0D%0A00:01:37.921%20--%3E%2000:01:38.920%0D%0ARight?%0D%0A%0D%0A00:01:38.921%20--%3E%2000:01:42.479%0D%0A16%20plus%208%20plus%202,%20that\u0027s%2026.%0D%0A%0D%0A00:01:42.480%20--%3E%2000:01:49.210%0D%0AWe%20can%20definitely%20represent%2026,%20the%20integer%0D%0A26,%20by%20zeros%20and%20ones.%0D%0A%0D%0A00:01:49.211%20--%3E%2000:01:53.810%0D%0ABut%20if%20we%20want%20to%20represent%20negative%2026,%20how%0D%0Awould%20that%20look%20like?%0D%0A%0D%0A00:01:53.811%20--%3E%2000:01:59.310%0D%0ACan%20we%20just%20write%20negative%2011010%20inside%20our%0D%0Amemory?%0D%0A%0D%0A00:01:59.311%20--%3E%2000:02:07.479%0D%0AActually,%20or%20probably%20not%20because%20our%20memory%0D%0Aonly%20has,%20or%20our%20memory%20units,%20only%20have%20two%0D%0A%0D%0A00:02:07.480%20--%3E%2000:02:08.530%0D%0Astates.%0D%0A%0D%0A00:02:08.531%20--%3E%2000:02:15.250%0D%0AWe%20name%20them%20zero,%20we%20consider%20them%20zero%20and%0D%0Aone%20but%20it%20doesn\u0027t%20have%20a%20third,%20I%20don\u0027t%20know,%0D%0A%0D%0A00:02:15.251%20--%3E%2000:02:16.950%0D%0Aminus%20or%20a%20negative%20symbol.%0D%0A%0D%0A00:02:16.951%20--%3E%2000:02:21.569%0D%0ASo%20we%20can\u0027t%20write%20negative%2011010.%0D%0A%0D%0A00:02:21.570%20--%3E%2000:02:26.069%0D%0AWe%20would%20need%20to%20use%20only%20zeros%20and%20ones%20in%0D%0Aorder%20to%20represent%20negative%2026.%0D%0A%0D%0A00:02:26.070%20--%3E%2000:02:28.640%0D%0AHow%20can%20we%20do%20that?%0D%0A%0D%0A00:02:28.641%20--%3E%2000:02:34.980%0D%0ASo%20there%20are%20a%20few%20approaches%20to%20represent%0D%0Asigned%20numbers,%20namely%20positive%20and%20negative%0D%0A%0D%0A00:02:34.981%20--%3E%2000:02:38.890%0D%0Anumbers,%20using%20only%20zeros%20and%20ones.%0D%0A%0D%0A00:02:38.891%20--%3E%2000:02:48.340%0D%0AI%20think%20the%20most%20easy,%20or%20most%20straightforward%0D%0Away%20is%20to%20use%20a%20method%20called%20signed%20and%20magnitude.%0D%0A%0D%0A00:02:48.341%20--%3E%2000:02:58.150%0D%0ABasically,%20we%20consider%20each%20sequence%20of%20bits%0D%0Ato%20be%20one%20bit%20for%20the%20sign%20and%20the%20rest%20of%0D%0A%0D%0A00:02:58.151%20--%3E%2000:03:05.260%0D%0Athe%20bits%20for%20the%20magnitude%20in%20order%20to%20represent,%0D%0Afor%20example,%20negative%2026%20will%20just%20put%20one%0D%0A%0D%0A00:03:05.261%20--%3E%2000:03:11.489%0D%0Afor%20negative,%20by%20the%20way%20zero%20would%20be%20for%0D%0Aa%20positive%20value,%20the%20one%20would%20be%20considered%0D%0A%0D%0A00:03:11.490%20--%3E%2000:03:12.920%0D%0Aas%20a%20negative%20number.%0D%0A%0D%0A00:03:12.921%20--%3E%2000:03:19.190%0D%0AAnd%20then%2026%20which%20is,%20depending%20on%20the%20length%0D%0Aof%20the%20magnitude,%20will%20have%20some%20leading%20zeros%0D%0A%0D%0A00:03:19.191%20--%3E%2000:03:22.400%0D%0Aand%20then%2011010,%20which%20is%20basically%2026.%0D%0A%0D%0A00:03:22.401%20--%3E%2000:03:28.340%0D%0ASo%20that%20would%20be%20interpreted,%20or%20considered%0D%0Aas%20negative%2026.%0D%0A%0D%0A00:03:28.341%20--%3E%2000:03:33.780%0D%0AWe%20have%20the%20sign%20to%20say%20whether%20it\u0027s%20positive%0D%0Aor%20negative,%20and%20the%20absolute%20value,%20the%20magnitude,%0D%0A%0D%0A00:03:33.781%20--%3E%2000:03:39.130%0D%0Aof%20what%20positive%20or%20negative%20number%20that%20is.%0D%0A%0D%0A00:03:39.131%20--%3E%2000:03:45.290%0D%0AUnfortunately%20that\u0027s%20not%20the%20way%20that%20Python,%0D%0Aand%20actually%20any%20other%20programming%20language%0D%0A%0D%0A00:03:45.291%20--%3E%2000:03:51.629%0D%0AI%20know%20of,%20doesn\u0027t%20use%20that%20representation%0D%0Amethod%20in%20order%20to%20present%20signed%20numbers%0D%0A%0D%0A00:03:51.630%20--%3E%2000:03:54.239%0D%0Aor%20in%20order%20to%20represent%20integers.%0D%0A%0D%0A00:03:54.240%20--%3E%2000:04:00.180%0D%0AThe%20more%20common%20representation%20method%20for%0D%0Asigned%20numbers%20for%20integers%20is%20called%20two\u0027s%0D%0A%0D%0A00:04:00.181%20--%3E%2000:04:02.080%0D%0Acomplement.%0D%0A%0D%0A00:04:02.081%20--%3E%2000:04:04.400%0D%0ALet%20me%20talk%20about%20that%20in%20more%20detail.%0D%0A%0D%0A"}')