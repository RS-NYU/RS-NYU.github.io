window.globalProvideData('caption', '{"data":"WEBVTT%0D%0AKind:%20captions%0D%0ASource:%20Articulate%20Closed%20Captions%20Editor%0D%0ASource%20Version:%201.10.13923.0%0D%0A%0D%0A00:00:00.669%20--%3E%2000:00:06.160%0D%0AHey%20there,%20hope%20you\u0027re%20having%20a%20great%20day.%0D%0AToday%20we\u0027re%20going%20to%20get%20into%20a%20more%0D%0A%0D%0A00:00:06.161%20--%3E%2000:00:13.030%0D%0Adetail%20of%20the%20Python%20syntax.%20We\u0027ll%20start%0D%0Atalking%20about%20numerical%20datatypes%20and%0D%0A%0D%0A00:00:13.031%20--%3E%2000:00:20.109%0D%0Athe%20arithmetic%20expressions,%20but%20I%20want%20to%0D%0Astart%20saying%20that%20mostly%20all%20programming%0D%0A%0D%0A00:00:20.110%20--%3E%2000:00:24.909%0D%0Alanguages%20have%20three%20fundamental%0D%0Aconstructs.%20There%20is%20the%20data%0D%0A%0D%0A00:00:24.910%20--%3E%2000:00:29.980%0D%0Athat%20the%20--%20that%20we%20can%20use%20in%20our%0D%0Aprogramming%20language,%20there%20are%0D%0A%0D%0A00:00:29.981%20--%3E%2000:00:34.809%0D%0Aexpressions%20that%20we%20can%20create,%20and%0D%0Aobviously%20there%20is%20the%20flow%20of%20the%0D%0A%0D%0A00:00:34.810%20--%3E%2000:00:40.809%0D%0Aprogram,%20the%20way%20we%20control%20the%20flow%20of%0D%0Athe%20execution%20of%20our%20program.%20In%20order%20to%0D%0A%0D%0A00:00:40.810%20--%3E%2000:00:45.070%0D%0Amaster%20in%20a%20problem%20in%20language,%20I%0D%0Aneed%20to%20tell%20you%20a%20lot%20about%20each%20one%20of%0D%0A%0D%0A00:00:45.071%20--%3E%2000:00:50.079%0D%0Athese.%20A%20lot%20about%20the%20data,%20a%20lot%20about%0D%0Aexpressions,%20a%20lot%20about%20a%20control%20flow.%20I%0D%0A%0D%0A00:00:50.080%20--%3E%2000:00:59.260%0D%0Acan\u0027t%20do%20it%20all%20at%20once,%20so%20we\u0027re%20going%20to%0D%0Atake%20it%20easy.%20We\u0027re%20going%20to%20start%20by%0D%0A%0D%0A00:00:59.261%20--%3E%2000:01:04.869%0D%0Aidentifying%20some%20of%20these%20constructs%20in%0D%0Athe%20program%20we%20already%20implemented.%20So%0D%0A%0D%0A00:01:04.870%20--%3E%2000:01:10.810%0D%0Alet\u0027s%20take%20a%20look%20the%20program%20we\u0027ve%0D%0Aimplemented%20in%20our%20previous%20lesson%20where%0D%0A%0D%0A00:01:10.811%20--%3E%2000:01:18.070%0D%0Awe%20read%20two%20numbers%20from%20the%20user%20and%0D%0Aadd%20them%20and%20print%20that%20the%20first%20one%0D%0A%0D%0A00:01:18.071%20--%3E%2000:01:22.030%0D%0Aplus%20the%20second%20one%20equals%20whatever,%20right,%20equals.%20So%20we%20have%20the%20print%0D%0A%0D%0A00:01:22.031%20--%3E%2000:01:28.930%0D%0Astatement,%20we%20have%20--%20we%20read%20into%20a%0D%0Avariable%20number%20one%20whatever%20the%20first%0D%0A%0D%0A00:01:28.931%20--%3E%2000:01:34.810%0D%0Ainput%20is%20converted%20to%20an%20int.%20Same%20thing%0D%0Awith%20the%20second%20input,%20calculate%20the%0D%0A%0D%0A00:01:34.811%20--%3E%2000:01:40.990%0D%0Asum%20of%20num1%20plus%20num2,%20store%20it%20in%20the%0D%0Asum%20variable,%20and%20then%20announce%20that%20num1%0D%0A%0D%0A00:01:40.991%20--%3E%2000:01:47.500%0D%0Aplus%20num2%20equals%20sum.%20So%20let\u0027s%20take%20a%0D%0Acloser%20look%20here%20and%20figure%20out%20what%0D%0A%0D%0A00:01:47.501%20--%3E%2000:01:55.049%0D%0Aconstructs%20does%20this%20program%20contain.%0D%0ASo%20in%20terms%20of%20control%20flow,%20basically%20we%0D%0A%0D%0A00:01:55.050%20--%3E%2000:01:59.909%0D%0Aexecute%20the%20program%20sequentially,%20we%0D%0Aexecute%20the%20program%20line%20by%20line%0D%0A%0D%0A00:01:59.910%20--%3E%2000:02:04.832%0D%0Asequentially%20first%20we%20execute%20the%20first%0D%0Aline%20then%20second,%20third,%20fourth,%20fifth.%0D%0A%0D%0A00:02:04.833%20--%3E%2000:02:09.819%0D%0AThat\u0027s%20a%20default%20control%20flow%20we%20don\u0027t%0D%0Aneed%20to%20do%20anything%20in%20order%20to%20make%20the%0D%0A%0D%0A00:02:09.820%20--%3E%2000:02:14.170%0D%0APython%20interpreter%20execute%20or%20evaluate%0D%0Athe%0D%0A%0D%0A00:02:14.171%20--%3E%2000:02:18.640%0D%0Alines%20of%20code%20sequentially,%20that%20would%20be%0D%0Athe%20default%20way%20of%20controlling%20the%20flow.%0D%0A%0D%0A00:02:18.641%20--%3E%2000:02:26.800%0D%0AWe%20will%20see%20in%20in%20the%20upcoming%20lessons%0D%0Aanother%20way%20is%20to%20control%20the%20flow%20of%0D%0A%0D%0A00:02:26.801%20--%3E%2000:02:31.870%0D%0Aour%20program,%20more%20complicated%20ways,%20but%0D%0Athe%20default%20flow%20is%20basically%0D%0A%0D%0A00:02:31.871%20--%3E%2000:02:39.100%0D%0Asequentially,%20a%20sequential%20flow.%20In%20terms%0D%0Aof%20expressions%20we\u0027ve%20used%20input-output%0D%0A%0D%0A00:02:39.101%20--%3E%2000:02:43.810%0D%0Aexpressions,%20right%20we\u0027ve%20used%20the%20print%0D%0Astatement%20to%20output%20a%20message%20to%20the%0D%0A%0D%0A00:02:43.811%20--%3E%2000:02:49.870%0D%0Auser,%20we\u0027ve%20used%20the%20input%20expression%20in%0D%0Aorder%20to%20read%20an%20input%20from%20the%20user,%20so%0D%0A%0D%0A00:02:49.871%20--%3E%2000:02:55.270%0D%0Awe\u0027ve%20definitely%20used%20some%20IO,%0D%0Ainput-output%20expressions.%20This%20program%0D%0A%0D%0A00:02:55.271%20--%3E%2000:03:02.010%0D%0Aalso%20contains%20or%20automatic%20expressions%0D%0Aright%20we%20have%20sum%20equals%20num1%20plus%20num2.%0D%0A%0D%0A00:03:02.011%20--%3E%2000:03:09.550%0D%0Anum1%20plus%20num2%20is%20an%20arithmetic%0D%0Aexpression.%20In%20terms%20of%20data,%20we\u0027ve%20used%0D%0A%0D%0A00:03:09.551%20--%3E%2000:03:18.100%0D%0Athe%20integer%20data%20in%20this%20case,%20right,%20num1%0D%0Aand%20num2%20and%20also%20some%20are%20all%20of%20type%0D%0A%0D%0A00:03:18.101%20--%3E%2000:03:25.540%0D%0Aintegers.%20But%20we\u0027ve%20seen%20in%20the%20previous%0D%0Alesson%20that%20there%20are%20some%20other%20data%0D%0A%0D%0A00:03:25.541%20--%3E%2000:03:30.190%0D%0Atypes%20we\u0027ve%20used%20the%20float%20data%20type%20and%0D%0Athe%20string%20data%20type,%20we\u0027ll%20talk%20about%0D%0A%0D%0A00:03:30.191%20--%3E%2000:03:34.690%0D%0Athem%20in%20more%20detail%20later%20on.%20In%20this%0D%0Alesson%20we\u0027re%20going%20to%20focus%20on%20numerical%0D%0A%0D%0A00:03:34.691%20--%3E%2000:03:38.368%0D%0Adata%20types%20basically%20on%20integers%20and%0D%0Afloats.%0D%0A%0D%0A"}')